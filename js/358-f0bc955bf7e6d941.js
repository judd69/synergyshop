(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[358],{65858:function(a,e,n){"use strict";n.d(e,{Z:function(){return t}});var r=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,t=function(a){var e={};return function(n){return void 0===e[n]&&(e[n]=a(n)),e[n]}}((function(a){return r.test(a)||111===a.charCodeAt(0)&&110===a.charCodeAt(1)&&a.charCodeAt(2)<91}))},41490:function(a,e,n){"use strict";n.r(e),n.d(e,{anticipate:function(){return y},backIn:function(){return S},backInOut:function(){return A},backOut:function(){return b},bounceIn:function(){return k},bounceInOut:function(){return M},bounceOut:function(){return v},circIn:function(){return p},circInOut:function(){return m},circOut:function(){return g},createAnticipateEasing:function(){return l},createBackIn:function(){return s},createExpoIn:function(){return u},createMirroredEasing:function(){return o},createReversedEasing:function(){return i},cubicBezier:function(){return K},easeIn:function(){return c},easeInOut:function(){return f},easeOut:function(){return h},linear:function(){return d},mirrored:function(){return t},reversed:function(){return r}});var r=function(a){return function(e){return 1-a(1-e)}},t=function(a){return function(e){return e<=.5?a(2*e)/2:(2-a(2*(1-e)))/2}},i=r,o=t,u=function(a){return function(e){return Math.pow(e,a)}},s=function(a){return function(e){return e*e*((a+1)*e-a)}},l=function(a){var e=s(a);return function(a){return(a*=2)<1?.5*e(a):.5*(2-Math.pow(2,-10*(a-1)))}},d=function(a){return a},c=u(2),h=r(c),f=t(c),p=function(a){return 1-Math.sin(Math.acos(a))},g=r(p),m=t(g),S=s(1.525),b=r(S),A=t(S),y=l(1.525),v=function(a){var e=a*a;return a<.36363636363636365?7.5625*e:a<.7272727272727273?9.075*e-9.9*a+3.4:a<.9?12.066481994459833*e-19.63545706371191*a+8.898060941828255:10.8*a*a-20.52*a+10.72},k=function(a){return 1-v(1-a)},M=function(a){return a<.5?.5*(1-v(1-2*a)):.5*v(2*a-1)+.5},B=.1,C="undefined"!==typeof Float32Array,T=function(a,e){return 1-3*e+3*a},N=function(a,e){return 3*e-6*a},O=function(a){return 3*a},R=function(a,e,n){return 3*T(e,n)*a*a+2*N(e,n)*a+O(e)},L=function(a,e,n){return((T(e,n)*a+N(e,n))*a+O(e))*a};function K(a,e,n,r){var t=C?new Float32Array(11):new Array(11),i=function(e){for(var r,i,o,u=0,s=1;10!==s&&t[s]<=e;++s)u+=B;return--s,r=(e-t[s])/(t[s+1]-t[s]),(o=R(i=u+r*B,a,n))>=.001?function(e,r){for(var t=0,i=0;t<8;++t){if(0===(i=R(r,a,n)))return r;r-=(L(r,a,n)-e)/i}return r}(e,i):0===o?i:function(e,r,t){var i,o,u=0;do{(i=L(o=r+(t-r)/2,a,n)-e)>0?t=o:r=o}while(Math.abs(i)>1e-7&&++u<10);return o}(e,u,u+B)};!function(){for(var e=0;e<11;++e)t[e]=L(e*B,a,n)}();return function(t){return a===e&&n===r?t:0===t?0:1===t?1:L(i(t),e,r)}}},74480:function(a,e,n){"use strict";n.d(e,{CD:function(){return p},Lk:function(){return R},Rc:function(){return y},Rv:function(){return L},TE:function(){return h},YD:function(){return f},iP:function(){return T},uZ:function(){return s},zG:function(){return k}});var r=n(6637),t=n(76065),i=(n(90218),n(41490),{x:0,y:0,z:0}),o=function(a){return"number"===typeof a},u=function(a){return function(e,n,r){return void 0!==r?a(e,n,r):function(r){return a(e,n,r)}}},s=u((function(a,e,n){return Math.min(Math.max(n,a),e)})),l=function(a){return a.hasOwnProperty("x")&&a.hasOwnProperty("y")},d=function(a){return l(a)&&a.hasOwnProperty("z")},c=function(a,e){return Math.abs(a-e)},h=function(a,e){if(void 0===e&&(e=i),o(a)&&o(e))return c(a,e);if(l(a)&&l(e)){var n=c(a.x,e.x),r=c(a.y,e.y),t=d(a)&&d(e)?c(a.z,e.z):0;return Math.sqrt(Math.pow(n,2)+Math.pow(r,2)+Math.pow(t,2))}return 0},f=function(a,e,n){var r=e-a;return 0===r?1:(n-a)/r},p=function(a,e,n){return-n*a+n*e+a},g=function(){return g=Object.assign||function(a){for(var e,n=1,r=arguments.length;n<r;n++)for(var t in e=arguments[n])Object.prototype.hasOwnProperty.call(e,t)&&(a[t]=e[t]);return a},g.apply(this,arguments)},m=function(a,e,n){var r=a*a,t=e*e;return Math.sqrt(Math.max(0,n*(t-r)+r))},S=[r.$v,r.m4,r.Jn],b=function(a){return S.find((function(e){return e.test(a)}))},A=function(a){return"'"+a+"' is not an animatable color. Use the equivalent color code instead."},y=function(a,e){var n=b(a),i=b(e);(0,t.k)(!!n,A(a)),(0,t.k)(!!i,A(e)),(0,t.k)(n.transform===i.transform,"Both colors must be hex/RGBA, OR both must be HSLA.");var o=n.parse(a),u=i.parse(e),s=g({},o),l=n===r.Jn?p:m;return function(a){for(var e in s)"alpha"!==e&&(s[e]=l(o[e],u[e],a));return s.alpha=p(o.alpha,u.alpha,a),n.transform(s)}},v=function(a,e){return function(n){return e(a(n))}},k=function(){for(var a=[],e=0;e<arguments.length;e++)a[e]=arguments[e];return a.reduce(v)};function M(a,e){return o(a)?function(n){return p(a,e,n)}:r.$_.test(a)?y(a,e):T(a,e)}var B=function(a,e){var n=a.slice(),r=n.length,t=a.map((function(a,n){return M(a,e[n])}));return function(a){for(var e=0;e<r;e++)n[e]=t[e](a);return n}};function C(a){for(var e=r.PY.parse(a),n=e.length,t=0,i=0,o=0,u=0;u<n;u++)t||"number"===typeof e[u]?t++:void 0!==e[u].hue?o++:i++;return{parsed:e,numNumbers:t,numRGB:i,numHSL:o}}var T=function(a,e){var n=r.PY.createTransformer(e),i=C(a),o=C(e);return(0,t.k)(i.numHSL===o.numHSL&&i.numRGB===o.numRGB&&i.numNumbers>=o.numNumbers,"Complex values '"+a+"' and '"+e+"' too different to mix. Ensure all colors are of the same type."),k(B(i.parsed,o.parsed),n)};var N=function(a){return a},O=function(a){return void 0===a&&(a=N),u((function(e,n,r){var t=n-r,i=-(0-e+1)*(0-a(Math.abs(t)));return t<=0?n+i:n-i}))},R=(O(),O(Math.sqrt),function(a,e){return o(a)?a/(1e3/e):0}),L=function(a,e){return e?a*(1e3/e):0};u((function(a,e,n){var r=e-a;return((n-a)%r+r)%r+a})),s(0,1)},13298:function(a,e,n){"use strict";function r(){return r=Object.assign||function(a){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(a[r]=n[r])}return a},r.apply(this,arguments)}var t=function(a,e,n,r,t){for(e=e&&e.split?e.split("."):[e],r=0;r<e.length;r++)a=a?a[e[r]]:t;return a===t?n:a},i=[40,52,64].map((function(a){return a+"em"})),o={space:[0,4,8,16,32,64,128,256,512],fontSizes:[12,14,16,20,24,32,48,64,72]},u={bg:"backgroundColor",m:"margin",mt:"marginTop",mr:"marginRight",mb:"marginBottom",ml:"marginLeft",mx:"marginX",my:"marginY",p:"padding",pt:"paddingTop",pr:"paddingRight",pb:"paddingBottom",pl:"paddingLeft",px:"paddingX",py:"paddingY"},s={marginX:["marginLeft","marginRight"],marginY:["marginTop","marginBottom"],paddingX:["paddingLeft","paddingRight"],paddingY:["paddingTop","paddingBottom"],size:["width","height"]},l={color:"colors",backgroundColor:"colors",borderColor:"colors",margin:"space",marginTop:"space",marginRight:"space",marginBottom:"space",marginLeft:"space",marginX:"space",marginY:"space",padding:"space",paddingTop:"space",paddingRight:"space",paddingBottom:"space",paddingLeft:"space",paddingX:"space",paddingY:"space",top:"space",right:"space",bottom:"space",left:"space",gridGap:"space",gridColumnGap:"space",gridRowGap:"space",gap:"space",columnGap:"space",rowGap:"space",fontFamily:"fonts",fontSize:"fontSizes",fontWeight:"fontWeights",lineHeight:"lineHeights",letterSpacing:"letterSpacings",border:"borders",borderTop:"borders",borderRight:"borders",borderBottom:"borders",borderLeft:"borders",borderWidth:"borderWidths",borderStyle:"borderStyles",borderRadius:"radii",borderTopRightRadius:"radii",borderTopLeftRadius:"radii",borderBottomRightRadius:"radii",borderBottomLeftRadius:"radii",borderTopWidth:"borderWidths",borderTopColor:"colors",borderTopStyle:"borderStyles",borderBottomWidth:"borderWidths",borderBottomColor:"colors",borderBottomStyle:"borderStyles",borderLeftWidth:"borderWidths",borderLeftColor:"colors",borderLeftStyle:"borderStyles",borderRightWidth:"borderWidths",borderRightColor:"colors",borderRightStyle:"borderStyles",outlineColor:"colors",boxShadow:"shadows",textShadow:"shadows",zIndex:"zIndices",width:"sizes",minWidth:"sizes",maxWidth:"sizes",height:"sizes",minHeight:"sizes",maxHeight:"sizes",flexBasis:"sizes",size:"sizes",fill:"colors",stroke:"colors"},d=function(a,e){if("number"!==typeof e||e>=0)return t(a,e,e);var n=Math.abs(e),r=t(a,n,n);return"string"===typeof r?"-"+r:-1*r},c=["margin","marginTop","marginRight","marginBottom","marginLeft","marginX","marginY","top","bottom","left","right"].reduce((function(a,e){var n;return r({},a,((n={})[e]=d,n))}),{});e.ZP=function a(e){return function(n){void 0===n&&(n={});var d=r({},o,{},n.theme||n),h={},f=function(a){return function(e){var n={},r=t(e,"breakpoints",i),o=[null].concat(r.map((function(a){return"@media screen and (min-width: "+a+")"})));for(var u in a){var s="function"===typeof a[u]?a[u](e):a[u];if(null!=s)if(Array.isArray(s))for(var l=0;l<s.slice(0,o.length).length;l++){var d=o[l];d?(n[d]=n[d]||{},null!=s[l]&&(n[d][u]=s[l])):n[u]=s[l]}else n[u]=s}return n}}("function"===typeof e?e(d):e)(d);for(var p in f){var g=f[p],m="function"===typeof g?g(d):g;if("variant"!==p)if(m&&"object"===typeof m)h[p]=a(m)(d);else{var S=t(u,p,p),b=t(l,S),A=t(d,b,t(d,S,{})),y=t(c,S,t)(A,m,m);if(s[S])for(var v=s[S],k=0;k<v.length;k++)h[v[k]]=y;else h[S]=y}else h=r({},h,{},a(t(d,m))(d))}return h}}},43119:function(a,e,n){"use strict";var r=this&&this.__importDefault||function(a){return a&&a.__esModule?a:{default:a}};Object.defineProperty(e,"__esModule",{value:!0}),e.ics=e.yahoo=e.office365=e.outlook=e.google=e.eventify=void 0;const t=r(n(45040)),i=r(n(21943)),o=n(68891),u=n(65140);function s({allDay:a,startUtc:e,endUtc:n},r){const t=u.TimeFormats[a?"allDay":r];return{start:e.format(t),end:n.format(t)}}t.default.extend(i.default);e.eventify=a=>{const{start:e,end:n,duration:r,...i}=a,o=t.default(e).utc(),u=n?t.default(n).utc():(()=>{if(a.allDay)return o.add(1,"day");if(r&&2==r.length){const a=Number(r[0]),e=r[1];return o.add(a,e)}return t.default().utc()})();return{...i,startUtc:o,endUtc:u}};e.google=a=>{const n=e.eventify(a),{start:r,end:t}=s(n,"dateTimeUTC"),i={action:"TEMPLATE",text:n.title,details:n.description,location:n.location,trp:n.busy,dates:r+"/"+t};return n.guests&&n.guests.length&&(i.add=n.guests.join()),`https://calendar.google.com/calendar/render?${o.stringify(i)}`};e.outlook=a=>{const n=e.eventify(a),{start:r,end:t}=s(n,"dateTimeWithOffset"),i={path:"/calendar/action/compose",rru:"addevent",startdt:r,enddt:t,subject:n.title,body:n.description,location:n.location};return`https://outlook.live.com/calendar/0/deeplink/compose?${o.stringify(i)}`};e.office365=a=>{const n=e.eventify(a),{start:r,end:t}=s(n,"dateTimeWithOffset"),i={path:"/calendar/action/compose",rru:"addevent",startdt:r,enddt:t,subject:n.title,body:n.description,location:n.location};return`https://outlook.office.com/calendar/0/deeplink/compose?${o.stringify(i)}`};e.yahoo=a=>{const n=e.eventify(a),{start:r,end:t}=s(n,"dateTimeUTC"),i={v:60,title:n.title,st:r,et:t,desc:n.description,in_loc:n.location};return`https://calendar.yahoo.com/?${o.stringify(i)}`};e.ics=a=>{const n=e.eventify(a),r=(n.description||"").replace(/,/gm,",").replace(/;/gm,";").replace(/\n/gm,"\\n").replace(/(\\n)[\s\t]+/gm,"\\n"),t=(n.location||"").replace(/,/gm,",").replace(/;/gm,";").replace(/\n/gm,"\\n").replace(/(\\n)[\s\t]+/gm,"\\n"),{start:i,end:o}=s(n,"dateTimeUTC"),u=[{key:"BEGIN",value:"VCALENDAR"},{key:"VERSION",value:"2.0"},{key:"BEGIN",value:"VEVENT"},{key:"URL",value:n.url},{key:"DTSTART",value:i},{key:"DTEND",value:o},{key:"SUMMARY",value:n.title},{key:"DESCRIPTION",value:r},{key:"LOCATION",value:t},{key:"END",value:"VEVENT"},{key:"END",value:"VCALENDAR"}];let l="";return u.forEach((a=>{a.value&&(l+=`${a.key}:${encodeURIComponent(`${a.value}\n`)}`)})),`data:text/calendar;charset=utf8,${l}`}},65140:function(a,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TimeFormats=void 0,e.TimeFormats={dateTimeWithOffset:"YYYY-MM-DD[T]HH:mm:ssZ",dateTimeUTC:"YYYYMMDD[T]HHmmss[Z]",allDay:"YYYYMMDD"}},45040:function(a){a.exports=function(){"use strict";var a="millisecond",e="second",n="minute",r="hour",t="day",i="week",o="month",u="quarter",s="year",l="date",d=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[^0-9]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?.?(\d+)?$/,c=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,h={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},f=function(a,e,n){var r=String(a);return!r||r.length>=e?a:""+Array(e+1-r.length).join(n)+a},p={s:f,z:function(a){var e=-a.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),t=n%60;return(e<=0?"+":"-")+f(r,2,"0")+":"+f(t,2,"0")},m:function a(e,n){if(e.date()<n.date())return-a(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),t=e.clone().add(r,o),i=n-t<0,u=e.clone().add(r+(i?-1:1),o);return+(-(r+(n-t)/(i?t-u:u-t))||0)},a:function(a){return a<0?Math.ceil(a)||0:Math.floor(a)},p:function(d){return{M:o,y:s,w:i,d:t,D:l,h:r,m:n,s:e,ms:a,Q:u}[d]||String(d||"").toLowerCase().replace(/s$/,"")},u:function(a){return void 0===a}},g="en",m={};m[g]=h;var S=function(a){return a instanceof v},b=function(a,e,n){var r;if(!a)return g;if("string"==typeof a)m[a]&&(r=a),e&&(m[a]=e,r=a);else{var t=a.name;m[t]=a,r=t}return!n&&r&&(g=r),r||!n&&g},A=function(a,e){if(S(a))return a.clone();var n="object"==typeof e?e:{};return n.date=a,n.args=arguments,new v(n)},y=p;y.l=b,y.i=S,y.w=function(a,e){return A(a,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var v=function(){function h(a){this.$L=b(a.locale,null,!0),this.parse(a)}var f=h.prototype;return f.parse=function(a){this.$d=function(a){var e=a.date,n=a.utc;if(null===e)return new Date(NaN);if(y.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match(d);if(r){var t=r[2]-1||0,i=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],t,r[3]||1,r[4]||0,r[5]||0,r[6]||0,i)):new Date(r[1],t,r[3]||1,r[4]||0,r[5]||0,r[6]||0,i)}}return new Date(e)}(a),this.$x=a.x||{},this.init()},f.init=function(){var a=this.$d;this.$y=a.getFullYear(),this.$M=a.getMonth(),this.$D=a.getDate(),this.$W=a.getDay(),this.$H=a.getHours(),this.$m=a.getMinutes(),this.$s=a.getSeconds(),this.$ms=a.getMilliseconds()},f.$utils=function(){return y},f.isValid=function(){return!("Invalid Date"===this.$d.toString())},f.isSame=function(a,e){var n=A(a);return this.startOf(e)<=n&&n<=this.endOf(e)},f.isAfter=function(a,e){return A(a)<this.startOf(e)},f.isBefore=function(a,e){return this.endOf(e)<A(a)},f.$g=function(a,e,n){return y.u(a)?this[e]:this.set(n,a)},f.unix=function(){return Math.floor(this.valueOf()/1e3)},f.valueOf=function(){return this.$d.getTime()},f.startOf=function(a,u){var d=this,c=!!y.u(u)||u,h=y.p(a),f=function(a,e){var n=y.w(d.$u?Date.UTC(d.$y,e,a):new Date(d.$y,e,a),d);return c?n:n.endOf(t)},p=function(a,e){return y.w(d.toDate()[a].apply(d.toDate("s"),(c?[0,0,0,0]:[23,59,59,999]).slice(e)),d)},g=this.$W,m=this.$M,S=this.$D,b="set"+(this.$u?"UTC":"");switch(h){case s:return c?f(1,0):f(31,11);case o:return c?f(1,m):f(0,m+1);case i:var A=this.$locale().weekStart||0,v=(g<A?g+7:g)-A;return f(c?S-v:S+(6-v),m);case t:case l:return p(b+"Hours",0);case r:return p(b+"Minutes",1);case n:return p(b+"Seconds",2);case e:return p(b+"Milliseconds",3);default:return this.clone()}},f.endOf=function(a){return this.startOf(a,!1)},f.$set=function(i,u){var d,c=y.p(i),h="set"+(this.$u?"UTC":""),f=(d={},d[t]=h+"Date",d[l]=h+"Date",d[o]=h+"Month",d[s]=h+"FullYear",d[r]=h+"Hours",d[n]=h+"Minutes",d[e]=h+"Seconds",d[a]=h+"Milliseconds",d)[c],p=c===t?this.$D+(u-this.$W):u;if(c===o||c===s){var g=this.clone().set(l,1);g.$d[f](p),g.init(),this.$d=g.set(l,Math.min(this.$D,g.daysInMonth())).$d}else f&&this.$d[f](p);return this.init(),this},f.set=function(a,e){return this.clone().$set(a,e)},f.get=function(a){return this[y.p(a)]()},f.add=function(a,u){var l,d=this;a=Number(a);var c=y.p(u),h=function(e){var n=A(d);return y.w(n.date(n.date()+Math.round(e*a)),d)};if(c===o)return this.set(o,this.$M+a);if(c===s)return this.set(s,this.$y+a);if(c===t)return h(1);if(c===i)return h(7);var f=(l={},l[n]=6e4,l[r]=36e5,l[e]=1e3,l)[c]||1,p=this.$d.getTime()+a*f;return y.w(p,this)},f.subtract=function(a,e){return this.add(-1*a,e)},f.format=function(a){var e=this;if(!this.isValid())return"Invalid Date";var n=a||"YYYY-MM-DDTHH:mm:ssZ",r=y.z(this),t=this.$locale(),i=this.$H,o=this.$m,u=this.$M,s=t.weekdays,l=t.months,d=function(a,r,t,i){return a&&(a[r]||a(e,n))||t[r].substr(0,i)},h=function(a){return y.s(i%12||12,a,"0")},f=t.meridiem||function(a,e,n){var r=a<12?"AM":"PM";return n?r.toLowerCase():r},p={YY:String(this.$y).slice(-2),YYYY:this.$y,M:u+1,MM:y.s(u+1,2,"0"),MMM:d(t.monthsShort,u,l,3),MMMM:d(l,u),D:this.$D,DD:y.s(this.$D,2,"0"),d:String(this.$W),dd:d(t.weekdaysMin,this.$W,s,2),ddd:d(t.weekdaysShort,this.$W,s,3),dddd:s[this.$W],H:String(i),HH:y.s(i,2,"0"),h:h(1),hh:h(2),a:f(i,o,!0),A:f(i,o,!1),m:String(o),mm:y.s(o,2,"0"),s:String(this.$s),ss:y.s(this.$s,2,"0"),SSS:y.s(this.$ms,3,"0"),Z:r};return n.replace(c,(function(a,e){return e||p[a]||r.replace(":","")}))},f.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},f.diff=function(a,l,d){var c,h=y.p(l),f=A(a),p=6e4*(f.utcOffset()-this.utcOffset()),g=this-f,m=y.m(this,f);return m=(c={},c[s]=m/12,c[o]=m,c[u]=m/3,c[i]=(g-p)/6048e5,c[t]=(g-p)/864e5,c[r]=g/36e5,c[n]=g/6e4,c[e]=g/1e3,c)[h]||g,d?m:y.a(m)},f.daysInMonth=function(){return this.endOf(o).$D},f.$locale=function(){return m[this.$L]},f.locale=function(a,e){if(!a)return this.$L;var n=this.clone(),r=b(a,e,!0);return r&&(n.$L=r),n},f.clone=function(){return y.w(this.$d,this)},f.toDate=function(){return new Date(this.valueOf())},f.toJSON=function(){return this.isValid()?this.toISOString():null},f.toISOString=function(){return this.$d.toISOString()},f.toString=function(){return this.$d.toUTCString()},h}(),k=v.prototype;return A.prototype=k,[["$ms",a],["$s",e],["$m",n],["$H",r],["$W",t],["$M",o],["$y",s],["$D",l]].forEach((function(a){k[a[1]]=function(e){return this.$g(e,a[0],a[1])}})),A.extend=function(a,e){return a.$i||(a(e,v,A),a.$i=!0),A},A.locale=b,A.isDayjs=S,A.unix=function(a){return A(1e3*a)},A.en=m[g],A.Ls=m,A.p={},A}()},21943:function(a){a.exports=function(){"use strict";return function(a,e,n){var r=e.prototype;n.utc=function(a){return new e({date:a,utc:!0,args:arguments})},r.utc=function(a){var e=n(this.toDate(),{locale:this.$L,utc:!0});return a?e.add(this.utcOffset(),"minute"):e},r.local=function(){return n(this.toDate(),{locale:this.$L,utc:!1})};var t=r.parse;r.parse=function(a){a.utc&&(this.$u=!0),this.$utils().u(a.$offset)||(this.$offset=a.$offset),t.call(this,a)};var i=r.init;r.init=function(){if(this.$u){var a=this.$d;this.$y=a.getUTCFullYear(),this.$M=a.getUTCMonth(),this.$D=a.getUTCDate(),this.$W=a.getUTCDay(),this.$H=a.getUTCHours(),this.$m=a.getUTCMinutes(),this.$s=a.getUTCSeconds(),this.$ms=a.getUTCMilliseconds()}else i.call(this)};var o=r.utcOffset;r.utcOffset=function(a,e){var n=this.$utils().u;if(n(a))return this.$u?0:n(this.$offset)?o.call(this):this.$offset;var r=Math.abs(a)<=16?60*a:a,t=this;if(e)return t.$offset=r,t.$u=0===a,t;if(0!==a){var i=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(t=this.local().add(r+i,"minute")).$offset=r,t.$x.$localOffset=i}else t=this.utc();return t};var u=r.format;r.format=function(a){var e=a||(this.$u?"YYYY-MM-DDTHH:mm:ss[Z]":"");return u.call(this,e)},r.valueOf=function(){var a=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||(new Date).getTimezoneOffset());return this.$d.valueOf()-6e4*a},r.isUTC=function(){return!!this.$u},r.toISOString=function(){return this.toDate().toISOString()},r.toString=function(){return this.toDate().toUTCString()};var s=r.toDate;r.toDate=function(a){return"s"===a&&this.$offset?n(this.format("YYYY-MM-DD HH:mm:ss:SSS")).toDate():s.call(this)};var l=r.diff;r.diff=function(a,e,r){if(a&&this.$u===a.$u)return l.call(this,a,e,r);var t=this.local(),i=n(a).local();return l.call(t,i,e,r)}}}()},31998:function(a){"use strict";var e="%[a-f0-9]{2}",n=new RegExp(e,"gi"),r=new RegExp("("+e+")+","gi");function t(a,e){try{return decodeURIComponent(a.join(""))}catch(i){}if(1===a.length)return a;e=e||1;var n=a.slice(0,e),r=a.slice(e);return Array.prototype.concat.call([],t(n),t(r))}function i(a){try{return decodeURIComponent(a)}catch(i){for(var e=a.match(n),r=1;r<e.length;r++)e=(a=t(e,r).join("")).match(n);return a}}a.exports=function(a){if("string"!==typeof a)throw new TypeError("Expected `encodedURI` to be of type `string`, got `"+typeof a+"`");try{return a=a.replace(/\+/g," "),decodeURIComponent(a)}catch(e){return function(a){for(var n={"%FE%FF":"\ufffd\ufffd","%FF%FE":"\ufffd\ufffd"},t=r.exec(a);t;){try{n[t[0]]=decodeURIComponent(t[0])}catch(e){var o=i(t[0]);o!==t[0]&&(n[t[0]]=o)}t=r.exec(a)}n["%C2"]="\ufffd";for(var u=Object.keys(n),s=0;s<u.length;s++){var l=u[s];a=a.replace(new RegExp(l,"g"),n[l])}return a}(a)}}},22627:function(a,e,n){"use strict";n.d(e,{ZT:function(){return t},_T:function(){return o},pi:function(){return i},pr:function(){return u}});var r=function(a,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(a,e){a.__proto__=e}||function(a,e){for(var n in e)e.hasOwnProperty(n)&&(a[n]=e[n])},r(a,e)};function t(a,e){function n(){this.constructor=a}r(a,e),a.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var i=function(){return i=Object.assign||function(a){for(var e,n=1,r=arguments.length;n<r;n++)for(var t in e=arguments[n])Object.prototype.hasOwnProperty.call(e,t)&&(a[t]=e[t]);return a},i.apply(this,arguments)};function o(a,e){var n={};for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&e.indexOf(r)<0&&(n[r]=a[r]);if(null!=a&&"function"===typeof Object.getOwnPropertySymbols){var t=0;for(r=Object.getOwnPropertySymbols(a);t<r.length;t++)e.indexOf(r[t])<0&&Object.prototype.propertyIsEnumerable.call(a,r[t])&&(n[r[t]]=a[r[t]])}return n}function u(){for(var a=0,e=0,n=arguments.length;e<n;e++)a+=arguments[e].length;var r=Array(a),t=0;for(e=0;e<n;e++)for(var i=arguments[e],o=0,u=i.length;o<u;o++,t++)r[t]=i[o];return r}},90218:function(a,e,n){"use strict";n.d(e,{$B:function(){return v},qY:function(){return S}});var r,t=n(76065),i=0,o="undefined"!==typeof window&&void 0!==window.requestAnimationFrame?function(a){return window.requestAnimationFrame(a)}:function(a){var e=Date.now(),n=Math.max(0,16.7-(e-i));i=e+n,setTimeout((function(){return a(i)}),n)};!function(a){a.Read="read",a.Update="update",a.Render="render",a.PostRender="postRender",a.FixedUpdate="fixedUpdate"}(r||(r={}));var u=1/60*1e3,s=!0,l=!1,d=!1,c={delta:0,timestamp:0},h=[r.Read,r.Update,r.Render,r.PostRender],f=function(a){return l=a},p=h.reduce((function(a,e){var n=function(a){var e=[],n=[],r=0,i=!1,o=0,u=new WeakSet,s=new WeakSet,l={cancel:function(a){var e=n.indexOf(a);u.add(a),-1!==e&&n.splice(e,1)},process:function(t){var d,c;if(i=!0,e=(d=[n,e])[0],(n=d[1]).length=0,r=e.length)for(o=0;o<r;o++)(c=e[o])(t),!0!==s.has(c)||u.has(c)||(l.schedule(c),a(!0));i=!1},schedule:function(a,o,l){void 0===o&&(o=!1),void 0===l&&(l=!1),(0,t.k)("function"===typeof a,"Argument must be a function");var d=l&&i,c=d?e:n;u.delete(a),o&&s.add(a),-1===c.indexOf(a)&&(c.push(a),d&&(r=e.length))}};return l}(f);return a.sync[e]=function(a,e,r){return void 0===e&&(e=!1),void 0===r&&(r=!1),l||y(),n.schedule(a,e,r),a},a.cancelSync[e]=function(a){return n.cancel(a)},a.steps[e]=n,a}),{steps:{},sync:{},cancelSync:{}}),g=p.steps,m=p.sync,S=p.cancelSync,b=function(a){return g[a].process(c)},A=function(a){l=!1,c.delta=s?u:Math.max(Math.min(a-c.timestamp,40),1),s||(u=c.delta),c.timestamp=a,d=!0,h.forEach(b),d=!1,l&&(s=!1,o(A))},y=function(){l=!0,s=!0,d||o(A)},v=function(){return c};e.ZP=m},76065:function(a,e,n){"use strict";n.d(e,{K:function(){return r},k:function(){return t}});var r=function(){},t=function(){}},48744:function(a){var e=function(a,n,r){var t,i,o={};if(r="undefined"===typeof r?"":r,n="undefined"===typeof n?"-":n,!(a instanceof Object)||Array.isArray(a))throw new Error("keyMirror(...): Argument must be an object.");for(t in a)i=""===r?t:r+n+t,a.hasOwnProperty(t)&&(a[t]instanceof Object?o[t]=e(a[t],n,i):o[t]=i);return o};a.exports=e},43218:function(a,e,n){a.exports=n(22203)},75912:function(a,e,n){"use strict";n.d(e,{aD:function(){return h},gw:function(){return I},II:function(){return B},F4:function(){return R},ST:function(){return M},if:function(){return N}});var r=function(){return r=Object.assign||function(a){for(var e,n=1,r=arguments.length;n<r;n++)for(var t in e=arguments[n])Object.prototype.hasOwnProperty.call(e,t)&&(a[t]=e[t]);return a},r.apply(this,arguments)};function t(a,e){var n={};for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&e.indexOf(r)<0&&(n[r]=a[r]);if(null!=a&&"function"===typeof Object.getOwnPropertySymbols){var t=0;for(r=Object.getOwnPropertySymbols(a);t<r.length;t++)e.indexOf(r[t])<0&&Object.prototype.propertyIsEnumerable.call(a,r[t])&&(n[r[t]]=a[r[t]])}return n}var i=n(74480),o=n(90218),u=n(6637),s=n(41490),l=function(){return function(a,e){var n=this,r=a.middleware,t=a.onComplete;this.isActive=!0,this.update=function(a){n.observer.update&&n.updateObserver(a)},this.complete=function(){n.observer.complete&&n.isActive&&n.observer.complete(),n.onComplete&&n.onComplete(),n.isActive=!1},this.error=function(a){n.observer.error&&n.isActive&&n.observer.error(a),n.isActive=!1},this.observer=e,this.updateObserver=function(a){return e.update(a)},this.onComplete=t,e.update&&r&&r.length&&r.forEach((function(a){return n.updateObserver=a(n.updateObserver,n.complete)}))}}(),d=function(a,e,n){var r=e.middleware;return new l({middleware:r,onComplete:n},"function"===typeof a?{update:a}:a)},c=function(){function a(a){void 0===a&&(a={}),this.props=a}return a.prototype.create=function(e){return new a(e)},a.prototype.start=function(a){void 0===a&&(a={});var e=!1,n={stop:function(){}},i=this.props,o=i.init,u=t(i,["init"]),s=o(d(a,u,(function(){e=!0,n.stop()})));return n=s?r({},n,s):n,e&&n.stop(),n},a.prototype.applyMiddleware=function(a){return this.create(r({},this.props,{middleware:this.props.middleware?[a].concat(this.props.middleware):[a]}))},a.prototype.pipe=function(){for(var a=[],e=0;e<arguments.length;e++)a[e]=arguments[e];var n=1===a.length?a[0]:i.zG.apply(void 0,a);return this.applyMiddleware((function(a){return function(e){return a(n(e))}}))},a}(),h=function(a){return new c({init:a})},f=[u.px,u.aQ,u.RW,u.vh,u.vw],p=function(a){return f.find((function(e){return e.test(a)}))},g=function(a,e){return a(e)},m=function(a,e){var n=e.from,i=e.to,o=t(e,["from","to"]),u=p(n)||p(i),s=u.transform,l=u.parse;return a(r({},o,{from:"string"===typeof n?l(n):n,to:"string"===typeof i?l(i):i})).pipe(s)},S=function(a){return function(e,n){var i=n.from,o=n.to,u=t(n,["from","to"]);return e(r({},u,{from:0,to:1})).pipe(a(i,o))}},b=S(i.Rc),A=S(i.iP),y=function(a,e){var n=function(a){var e=Object.keys(a),n=function(e,n){return void 0!==e&&!a[n](e)};return{getVectorKeys:function(a){return e.reduce((function(e,r){return n(a[r],r)&&e.push(r),e}),[])},testVectorProps:function(a){return a&&e.some((function(e){return n(a[e],e)}))}}}(e),r=n.testVectorProps,t=n.getVectorKeys;return function(e){if(!r(e))return a(e);var n=t(e),i=e[n[0]];return v(i)(a,e,n)}},v=function(a){return"number"===typeof a?g:function(a){return Boolean(p(a))}(a)?m:u.$_.test(a)?b:u.PY.test(a)?A:g},k=y((function(a){return void 0===a&&(a={}),h((function(e){var n=e.complete,r=e.update,t=a.velocity,i=void 0===t?0:t,u=a.from,s=void 0===u?0:u,l=a.power,d=void 0===l?.8:l,c=a.timeConstant,h=void 0===c?350:c,f=a.restDelta,p=void 0===f?.5:f,g=a.modifyTarget,m=0,S=d*i,b=Math.round(s+S),A="undefined"===typeof g?b:g(b),y=o.ZP.update((function(a){var e=a.delta;m+=e;var t=-S*Math.exp(-m/h),i=t>p||t<-p;r(i?A+t:A),i||(o.qY.update(y),n())}),!0);return{stop:function(){return o.qY.update(y)}}}))}),{from:u.Rx.test,modifyTarget:function(a){return"function"===typeof a},velocity:u.Rx.test}),M=y((function(a){return void 0===a&&(a={}),h((function(e){var n=e.update,r=e.complete,t=a.velocity,u=void 0===t?0:t,s=a.from,l=void 0===s?0:s,d=a.to,c=void 0===d?0:d,h=a.stiffness,f=void 0===h?100:h,p=a.damping,g=void 0===p?10:p,m=a.mass,S=void 0===m?1:m,b=a.restSpeed,A=void 0===b?.01:b,y=a.restDelta,v=void 0===y?.01:y,k=u?-u/1e3:0,M=0,B=c-l,C=l,T=C,N=o.ZP.update((function(a){var e=a.delta;M+=e;var t=g/(2*Math.sqrt(f*S)),s=Math.sqrt(f/S)/1e3;if(T=C,t<1){var l=Math.exp(-t*s*M),d=s*Math.sqrt(1-t*t);C=c-l*((k+t*s*B)/d*Math.sin(d*M)+B*Math.cos(d*M))}else{l=Math.exp(-s*M);C=c-l*(B+(k+s*B)*M)}u=(0,i.Rv)(C-T,e);var h=Math.abs(u)<=A,p=Math.abs(c-C)<=v;h&&p?(n(C=c),o.qY.update(N),r()):n(C)}),!0);return{stop:function(){return o.qY.update(N)}}}))}),{from:u.Rx.test,to:u.Rx.test,stiffness:u.Rx.test,damping:u.Rx.test,mass:u.Rx.test,velocity:u.Rx.test}),B=y((function(a){var e=a.from,n=void 0===e?0:e,t=a.velocity,u=void 0===t?0:t,s=a.min,l=a.max,d=a.power,c=void 0===d?.8:d,f=a.timeConstant,p=void 0===f?700:f,g=a.bounceStiffness,m=void 0===g?500:g,S=a.bounceDamping,b=void 0===S?10:S,A=a.restDelta,y=void 0===A?1:A,v=a.modifyTarget;return h((function(a){var e,t=a.update,d=a.complete,h=n,f=n,g=!1,S=function(a){return void 0!==s&&a<=s},A=function(a){return void 0!==l&&a>=l},B=function(a){return S(a)||A(a)},C=function(a){t(a),h=f,f=a,u=(0,i.Rv)(f-h,(0,o.$B)().delta),e&&!g&&function(a,e){return S(a)&&e<0||A(a)&&e>0}(a,u)&&N({from:a,velocity:u})},T=function(a,n){e&&e.stop(),e=a.start({update:C,complete:function(){n?n():d()}})},N=function(a){g=!0,T(M(r({},a,{to:S(a.from)?s:l,stiffness:m,damping:b,restDelta:y})))};if(B(n))N({from:n,velocity:u});else if(0!==u){var O=k({from:n,velocity:u,timeConstant:p,power:c,restDelta:B(n)?20:y,modifyTarget:v});T(O,(function(){B(f)?N({from:f,velocity:u}):d()}))}else d();return{stop:function(){return e&&e.stop()}}}))}),{from:u.Rx.test,velocity:u.Rx.test,min:u.Rx.test,max:u.Rx.test,damping:u.Rx.test,stiffness:u.Rx.test,modifyTarget:function(a){return"function"===typeof a}}),C=y((function(a){var e=a.from,n=void 0===e?0:e,r=a.to,t=void 0===r?1:r,o=a.ease,u=void 0===o?s.linear:o,l=a.reverseEase;return void 0!==l&&l&&(u=(0,s.createReversedEasing)(u)),h((function(a){var e=a.update;return{seek:function(a){return e(a)}}})).pipe(u,(function(a){return(0,i.CD)(n,t,a)}))}),{ease:function(a){return"function"===typeof a},from:u.Rx.test,to:u.Rx.test}),T=(0,i.uZ)(0,1),N=function(a){return void 0===a&&(a={}),h((function(e){var n,r=e.update,t=e.complete,u=a.duration,l=void 0===u?300:u,d=a.ease,c=void 0===d?s.easeOut:d,h=a.flip,f=void 0===h?0:h,p=a.loop,g=void 0===p?0:p,m=a.yoyo,S=void 0===m?0:m,b=a.repeatDelay,A=void 0===b?0:b,y=a.from,v=void 0===y?0:y,k=a.to,M=void 0===k?1:k,B=a.elapsed,N=void 0===B?0:B,O=a.flipCount,R=void 0===O?0:O,L=a.yoyoCount,K=void 0===L?0:L,P=a.loopCount,D=void 0===P?0:P,G=C({from:v,to:M,ease:c}).start(r),I=0,E=!1,w=function(a){var e;void 0===a&&(a=!1),G=C({from:v=(e=[M,v])[0],to:M=e[1],ease:c,reverseEase:a}).start(r)},H=function(){I=T((0,i.YD)(0,l,N)),G.seek(I)},j=function(){E=!0,n=o.ZP.update((function(a){var e=a.delta;N+=e,H(),function(){var a=E&&N>l+A;return!!a&&(!(!a||g||f||S)||(N=N-l-A,g&&D<g?(D++,!1):f&&R<f?(R++,w(),!1):!(S&&K<S)||(K++,w(K%2!==0),!1)))}()&&(o.qY.update(n),t&&o.ZP.update(t,!1,!0))}),!0)},z=function(){E=!1,n&&o.qY.update(n)};return j(),{isActive:function(){return E},getElapsed:function(){return(0,i.uZ)(0,l,N)},getProgress:function(){return I},stop:function(){z()},pause:function(){return z(),this},resume:function(){return E||j(),this},seek:function(a){return N=(0,i.CD)(0,l,a),o.ZP.update(H,!1,!0),this},reverse:function(){return w(),this}}}))},O=(0,i.uZ)(0,1),R=function(a){var e=a.easings,n=a.ease,o=void 0===n?s.linear:n,u=a.times,l=a.values,d=t(a,["easings","ease","times","values"]);e=Array.isArray(e)?e:function(a,e){return a.map((function(){return e||s.easeOut})).splice(0,a.length-1)}(l,e),u=u||function(a){var e=a.length;return a.map((function(a,n){return 0!==n?n/(e-1):0}))}(l);var c=e.map((function(a,e){return C({from:l[e],to:l[e+1],ease:a})}));return N(r({},d,{ease:o})).applyMiddleware((function(a){return function(a,e,n){var r=a.length,t=r-1,o=t-1,u=e.map((function(a){return a.start(n)}));return function(e){e<=a[0]&&u[0].seek(0),e>=a[t]&&u[o].seek(1);for(var n=1;n<r&&!(a[n]>e||n===t);n++);var s=(0,i.YD)(a[n-1],a[n],e);u[n-1].seek(O(s))}}(u,c,a)}))},L=(u.Rx.test,u.Rx.test,u.Rx.test,u.Rx.test,u.Rx.test,u.Rx.test,function(a,e,n){return h((function(r){var t=r.update,i=e.split(" ").map((function(e){return a.addEventListener(e,t,n),e}));return{stop:function(){return i.forEach((function(e){return a.removeEventListener(e,t,n)}))}}}))}),K=function(){return{clientX:0,clientY:0,pageX:0,pageY:0,x:0,y:0}},P=function(a,e){return void 0===e&&(e={clientX:0,clientY:0,pageX:0,pageY:0,x:0,y:0}),e.clientX=e.x=a.clientX,e.clientY=e.y=a.clientY,e.pageX=a.pageX,e.pageY=a.pageY,e},D=[K()];if("undefined"!==typeof document){L(document,"touchstart touchmove",{passive:!0,capture:!0}).start((function(a){var e=a.touches;!0;var n=e.length;D.length=0;for(var r=0;r<n;r++){var t=e[r];D.push(P(t))}}))}var G=K();if("undefined"!==typeof document){L(document,"mousedown mousemove",!0).start((function(a){!0,P(a,G)}))}var I=function(a){return h((function(e){var n=e.complete,r=setTimeout(n,a);return{stop:function(){return clearTimeout(r)}}}))}},58772:function(a,e,n){"use strict";var r=n(90331);function t(){}function i(){}i.resetWarningCache=t,a.exports=function(){function a(a,e,n,t,i,o){if(o!==r){var u=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw u.name="Invariant Violation",u}}function e(){return a}a.isRequired=a;var n={array:a,bigint:a,bool:a,func:a,number:a,object:a,string:a,symbol:a,any:a,arrayOf:e,element:a,elementType:a,instanceOf:e,node:a,objectOf:e,oneOf:e,oneOfType:e,shape:e,exact:e,checkPropTypes:i,resetWarningCache:t};return n.PropTypes=n,n}},23615:function(a,e,n){a.exports=n(58772)()},90331:function(a){"use strict";a.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},68891:function(a,e,n){"use strict";const r=n(29742),t=n(31998),i=n(89400);function o(a){if("string"!==typeof a||1!==a.length)throw new TypeError("arrayFormatSeparator must be single character string")}function u(a,e){return e.encode?e.strict?r(a):encodeURIComponent(a):a}function s(a,e){return e.decode?t(a):a}function l(a){return Array.isArray(a)?a.sort():"object"===typeof a?l(Object.keys(a)).sort(((a,e)=>Number(a)-Number(e))).map((e=>a[e])):a}function d(a){const e=a.indexOf("#");return-1!==e&&(a=a.slice(0,e)),a}function c(a){const e=(a=d(a)).indexOf("?");return-1===e?"":a.slice(e+1)}function h(a,e){return e.parseNumbers&&!Number.isNaN(Number(a))&&"string"===typeof a&&""!==a.trim()?a=Number(a):!e.parseBooleans||null===a||"true"!==a.toLowerCase()&&"false"!==a.toLowerCase()||(a="true"===a.toLowerCase()),a}function f(a,e){o((e=Object.assign({decode:!0,sort:!0,arrayFormat:"none",arrayFormatSeparator:",",parseNumbers:!1,parseBooleans:!1},e)).arrayFormatSeparator);const n=function(a){let e;switch(a.arrayFormat){case"index":return(a,n,r)=>{e=/\[(\d*)\]$/.exec(a),a=a.replace(/\[\d*\]$/,""),e?(void 0===r[a]&&(r[a]={}),r[a][e[1]]=n):r[a]=n};case"bracket":return(a,n,r)=>{e=/(\[\])$/.exec(a),a=a.replace(/\[\]$/,""),e?void 0!==r[a]?r[a]=[].concat(r[a],n):r[a]=[n]:r[a]=n};case"comma":case"separator":return(e,n,r)=>{const t="string"===typeof n&&n.includes(a.arrayFormatSeparator),i="string"===typeof n&&!t&&s(n,a).includes(a.arrayFormatSeparator);n=i?s(n,a):n;const o=t||i?n.split(a.arrayFormatSeparator).map((e=>s(e,a))):null===n?n:s(n,a);r[e]=o};default:return(a,e,n)=>{void 0!==n[a]?n[a]=[].concat(n[a],e):n[a]=e}}}(e),r=Object.create(null);if("string"!==typeof a)return r;if(!(a=a.trim().replace(/^[?#&]/,"")))return r;for(const t of a.split("&")){let[a,o]=i(e.decode?t.replace(/\+/g," "):t,"=");o=void 0===o?null:["comma","separator"].includes(e.arrayFormat)?o:s(o,e),n(s(a,e),o,r)}for(const t of Object.keys(r)){const a=r[t];if("object"===typeof a&&null!==a)for(const n of Object.keys(a))a[n]=h(a[n],e);else r[t]=h(a,e)}return!1===e.sort?r:(!0===e.sort?Object.keys(r).sort():Object.keys(r).sort(e.sort)).reduce(((a,e)=>{const n=r[e];return Boolean(n)&&"object"===typeof n&&!Array.isArray(n)?a[e]=l(n):a[e]=n,a}),Object.create(null))}e.extract=c,e.parse=f,e.stringify=(a,e)=>{if(!a)return"";o((e=Object.assign({encode:!0,strict:!0,arrayFormat:"none",arrayFormatSeparator:","},e)).arrayFormatSeparator);const n=n=>{return e.skipNull&&(null===(r=a[n])||void 0===r)||e.skipEmptyString&&""===a[n];var r},r=function(a){switch(a.arrayFormat){case"index":return e=>(n,r)=>{const t=n.length;return void 0===r||a.skipNull&&null===r||a.skipEmptyString&&""===r?n:null===r?[...n,[u(e,a),"[",t,"]"].join("")]:[...n,[u(e,a),"[",u(t,a),"]=",u(r,a)].join("")]};case"bracket":return e=>(n,r)=>void 0===r||a.skipNull&&null===r||a.skipEmptyString&&""===r?n:null===r?[...n,[u(e,a),"[]"].join("")]:[...n,[u(e,a),"[]=",u(r,a)].join("")];case"comma":case"separator":return e=>(n,r)=>null===r||void 0===r||0===r.length?n:0===n.length?[[u(e,a),"=",u(r,a)].join("")]:[[n,u(r,a)].join(a.arrayFormatSeparator)];default:return e=>(n,r)=>void 0===r||a.skipNull&&null===r||a.skipEmptyString&&""===r?n:null===r?[...n,u(e,a)]:[...n,[u(e,a),"=",u(r,a)].join("")]}}(e),t={};for(const o of Object.keys(a))n(o)||(t[o]=a[o]);const i=Object.keys(t);return!1!==e.sort&&i.sort(e.sort),i.map((n=>{const t=a[n];return void 0===t?"":null===t?u(n,e):Array.isArray(t)?t.reduce(r(n),[]).join("&"):u(n,e)+"="+u(t,e)})).filter((a=>a.length>0)).join("&")},e.parseUrl=(a,e)=>{e=Object.assign({decode:!0},e);const[n,r]=i(a,"#");return Object.assign({url:n.split("?")[0]||"",query:f(c(a),e)},e&&e.parseFragmentIdentifier&&r?{fragmentIdentifier:s(r,e)}:{})},e.stringifyUrl=(a,n)=>{n=Object.assign({encode:!0,strict:!0},n);const r=d(a.url).split("?")[0]||"",t=e.extract(a.url),i=e.parse(t,{sort:!1}),o=Object.assign(i,a.query);let s=e.stringify(o,n);s&&(s=`?${s}`);let l=function(a){let e="";const n=a.indexOf("#");return-1!==n&&(e=a.slice(n)),e}(a.url);return a.fragmentIdentifier&&(l=`#${u(a.fragmentIdentifier,n)}`),`${r}${s}${l}`}},83884:function(a,e,n){"use strict";n.d(e,{Px:function(){return y},Xz:function(){return v}});var r=n(27378),t=n(23615),i=n.n(t),o=[["Afghanistan","AF","Badakhshan~BDS|Badghis~BDG|Baghlan~BGL|Balkh~BAL|Bamyan~BAM|Daykundi~DAY|Farah~FRA|Faryab~FYB|Ghazni~GHA|Ghor~GHO|Helmand~HEL|Herat~HER|Jowzjan~JOW|Kabul~KAB|Kandahar~KAN|Kapisa~KAP|Khost~KHO|Kunar~KNR|Kunduz~KDZ|Laghman~LAG|Logar~LOW|Maidan Wardak~WAR|Nangarhar~NAN|Nimruz~NIM|Nuristan~NUR|Paktia~PIA|Paktika~PKA|Panjshir~PAN|Parwan~PAR|Samangan~SAM|Sar-e Pol~SAR|Takhar~TAK|Urozgan~ORU|Zabul~ZAB"],["\xc5land Islands","AX","Br\xe4nd\xf6~BR|Ecker\xf6~EC|Finstr\xf6m~FN|F\xf6gl\xf6~FG|Geta~GT|Hammarland~HM|Jomala~JM|Kumlinge~KM|K\xf6kar~KK|Lemland~LE|Lumparland~LU|Mariehamn~MH|Saltvik~SV|Sottunga~ST|Sund~SD|V\xe5rd\xf6~VR"],["Albania","AL","Berat~01|Dib\xebr~09|Durr\xebs~02|Elbasan~03|Fier~04|Gjirokast\xebr~05|Kor\xe7\xeb~06|Kuk\xebs~07|Lezh\xeb~08|Shkod\xebr~10|Tirana~11|Vlor\xeb~12"],["Algeria","DZ","Adrar~01|A\xefn Defla~44|A\xefn T\xe9mouchent~46|Algiers~16|Annaba~23|Batna~05|B\xe9char~08|B\xe9ja\xefa~06|Biskra~07|Blida~09|Bordj Bou Arr\xe9ridj~34|Bou\xefra~10|Boumerd\xe8s~35|Chlef~02|Constantine~25|Djelfa~17|El Bayadh~32|El Oued~39|El Tarf~36|Gharda\xefa~47|Guelma~24|Illizi~33|Jijel~18|Khenchela~40|Laghouat~03|Mascara~29|M\xe9d\xe9a~26|Mila~43|Mostaganem~27|Msila~28|Na\xe2ma~45|Oran~31|Ouargla~30|Oum el Bouaghi~04|Relizane~48|Sa\xefda~20|S\xe9tif~19|Sidi Bel Abb\xe8s~22|Skikda~21|Souk Ahras~41|Tamanghasset~11|T\xe9bessa~12|Tiaret~14|Tindouf~37|Tipaza~42|Tissemsilt~38|Tizi Ouzou~15|Tlemcen~13"],["American Samoa","AS","Tutuila~01|Aunu'u~02|Ta'\u016b~03|Ofu\u2011Olosega~04|Rose Atoll~21|Swains Island~22"],["Andorra","AD","Andorra la Vella~07|Canillo~02|Encamp~03|Escaldes-Engordany~08|La Massana~04|Ordino~05|Sant Juli\xe0 de L\xf2ria~06"],["Angola","AO","Bengo~BGO|Benguela~BGU|Bi\xe9~BIE|Cabinda~CAB|Cuando Cubango~CCU|Cuanza Norte~CNO|Cuanza Sul~CUS|Cunene~CNN|Huambo~HUA|Hu\xedla~HUI|Luanda~LUA|Lunda Norte~LNO|Lunda Sul~LSU|Malanje~MAL|Moxico~MOX|Namibe~NAM|U\xedge~UIG|Zaire~ZAI"],["Anguilla","AI","Anguilla~01|Anguillita Island~02|Blowing Rock~03|Cove Cay~04|Crocus Cay~05|Deadman's Cay~06|Dog Island~07|East Cay~08|Little Island~09|Little Scrub Island~10|Mid Cay~11|North Cay~12|Prickly Pear Cays~13|Rabbit Island~14|Sandy Island/Sand Island~15|Scilly Cay~16|Scrub Island~17|Seal Island~18|Sombrero/Hat Island~19|South Cay~20|South Wager Island~21|West Cay~22"],["Antarctica","AQ","Antarctica~AQ"],["Antigua and Barbuda","AG","Antigua Island~01|Barbuda Island~02|Bird Island~04|Bishop Island~05|Blake Island~06|Crump Island~09|Dulcina Island~10|Exchange Island~11|Five Islands~12|Great Bird Island~13|Green Island~14|Guiana Island~15|Hawes Island~17|Hells Gate Island~16|Henry Island~18|Johnson Island~19|Kid Island~20|Lobster Island~22|Maiden Island~24|Moor Island~25|Nanny Island~26|Pelican Island~27|Prickly Pear Island~28|Rabbit Island~29|Red Head Island~31|Redonda Island~03|Sandy Island~32|Smith Island~33|The Sisters~34|Vernon Island~35|Wicked Will Island~36|York Island~37"],["Argentina","AR","Buenos Aires~B|Capital Federal~C|Catamarca~K|Chaco~H|Chubut~U|C\xf3rdoba~X|Corrientes~W|Entre R\xedos~E|Formosa~P|Jujuy~Y|La Pampa~L|La Rioja~F|Mendoza~M|Misiones~N|Neuqu\xe9n~Q|R\xedo Negro~R|Salta~A|San Juan~J|San Luis~D|Santa Cruz~Z|Santa Fe~S|Santiago del Estero~G|Tierra del Fuego~V|Tucum\xe1n~T"],["Armenia","AM","Aragatsotn~AG|Ararat~AR|Armavir~AV|Gegharkunik~GR|Kotayk~KT|Lori~LO|Shirak~SH|Syunik~SU|Tavush~TV|Vayots Dzor~VD|Yerevan~ER"],["Aruba","AW","Aruba~AW"],["Australia","AU","Australian Capital Territory~ACT|New South Wales~NSW|Northern Territory~NT|Queensland~QLD|South Australia~SA|Tasmania~TAS|Victoria~VIC|Western Australia~WA"],["Austria","AT","Burgenland~1|K\xe4rnten~2|Nieder\xf6sterreich~3|Ober\xf6sterreich~4|Salzburg~5|Steiermark~6|Tirol~7|Vorarlberg~8|Wien~9"],["Azerbaijan","AZ","Ab\u015feron~ABS|A\u011fcab\u0259di~AGC|A\u011fdam~AGM|A\u011fda\u015f~AGS|A\u011fstafa~AGA|A\u011fsu~AGU|Astara~AST|Bak\u0131~BAK|Bab\u0259k~BAB|Balak\u0259n~BAL|B\u0259rd\u0259~BAR|Beyl\u0259qan~BEY|Bil\u0259suvar~BIL|C\u0259bray\u0131l~CAB|C\u0259lilabad~CAL|Culfa~CUL|Da\u015fk\u0259s\u0259n~DAS|F\xfczuli~FUZ|G\u0259d\u0259b\u0259y~GAD|Goranboy~GOR|G\xf6y\xe7ay~GOY|G\xf6yg\xf6l~GYG|Hac\u0131qabul~HAC|\u0130mi\u015fli~IMI|\u0130smay\u0131ll\u0131~ISM|K\u0259lb\u0259c\u0259r~KAL|K\u01ddng\u01ddrli~KAN|K\xfcrd\u0259mir~KUR|La\xe7\u0131n~LAC|L\u0259nk\u0259ran~LAN|Lerik~LER|Masall\u0131~MAS|Neft\xe7ala~NEF|O\u011fuz~OGU|Ordubad~ORD|Q\u0259b\u0259l\u0259~QAB|Qax~QAX|Qazax~QAZ|Qobustan~QOB|Quba~QBA|Qubadli~QBI|Qusar~QUS|Saatl\u0131~SAT|Sabirabad~SAB|\u015eabran~SBN|S\u0259d\u0259r\u0259k~SAD|\u015eahbuz~SAH|\u015e\u0259ki~SAK|Salyan~SAL|\u015eamax\u0131~SMI|\u015e\u0259mkir~SKR|Samux~SMX|\u015e\u0259rur~SAR|Siy\u0259z\u0259n~SIY|\u015eu\u015fa~SUS|T\u0259rt\u0259r~TAR|Tovuz~TOV|Ucar~UCA|Xa\xe7maz~XAC|X\u0131z\u0131~XIZ|Xocal\u0131~XCI|Xocav\u0259nd~XVD|Yard\u0131ml\u0131~YAR|Yevlax~YEV|Z\u0259ngilan~ZAN|Zaqatala~ZAQ|Z\u0259rdab~ZAR"],["Bahamas","BS","Acklins Island~01|Berry Islands~22|Bimini~02|Black Point~23|Cat Island~03|Central Abaco~24|Crooked Island and Long Cay~28|East Grand Bahama~29|Exuma~04|Freeport~05|Fresh Creek~06|Governor's Harbour~07|Green Turtle Cay~08|Harbour Island~09|High Rock~10|Inagua~11|Kemps Bay~12|Long Island~13|Marsh Harbour~14|Mayaguana~15|Moore\u2019s Island~40|New Providence~16|Nichollstown and Berry Islands~17|North Abaco~42|North Andros~41|North Eleuthera~33|Ragged Island~18|Rock Sound~19|San Salvador and Rum Cay~20|Sandy Point~21|South Abaco~35|South Andros~36|South Eleuthera~37|West Grand Bahama~39"],["Bahrain","BH","Al Jan\u016bb\u012byah~14|Al Man\u0101mah~13|Al Mu\u1e29arraq~15|Al Wus\u0163\xe1~16|Ash Sham\u0101l\u012byah~17"],["Bangladesh","BD","Barisal~A|Chittagong~B|Dhaka~C|Khulna~D|Mymensingh~M|Rajshahi~E|Rangpur~F|Sylhet~G"],["Barbados","BB","Christ Church~01|Saint Andrew~02|Saint George~03|Saint James~04|Saint John~05|Saint Joseph~06|Saint Lucy~07|Saint Michael~08|Saint Peter~09|Saint Philip~10|Saint Thomas~11"],["Belarus","BY","Brest voblast~BR|Gorod Minsk~HO|Homiel voblast~HO|Hrodna voblast~HR|Mahilyow voblast~MA|Minsk voblast~MI|Vitsebsk voblast~VI"],["Belgium","BE","Bruxelles-Capitale~BRU|R\xe9gion Flamande~VLG|R\xe9gion Walloni\xeb~WAL"],["Belize","BZ","Belize District~BZ|Cayo District~CY|Corozal District~CZL|Orange Walk District~OW|Stann Creek District~SC|Toledo District~TOL"],["Benin","BJ","Alibori~AL|Atakora~AK|Atlantique~AQ|Borgou~BO|Collines Department~CO|Donga~DO|Kouffo~KO|Littoral Department~LI|Mono Department~MO|Ou\xe9m\xe9~OU|Plateau~PL|Zou~ZO"],["Bermuda","BM","City of Hamilton~03|Devonshire Parish~01|Hamilton Parish~02|Paget Parish~04|Pembroke Parish~05|Sandys Parish~08|Smith's Parish~09|Southampton Parish~10|St. George's Parish~07|Town of St. George~06|Warwick Parish~11"],["Bhutan","BT","Bumthang~33|Chhukha~12|Dagana~22|Gasa~GA|Haa~13|Lhuntse~44|Mongar~42|Paro~11|Pemagatshel~43|Punakha~23|Samdrup Jongkhar~45|Samtse~14|Sarpang~31|Thimphu~15|Trashigang~41|Trashiyangtse~TY|Trongsa~32|Tsirang~21|Wangdue Phodrang~24|Zhemgang~34"],["Bolivia","BO","Beni~B|Chuquisaca~H|Cochabamba~C|La Paz~L|Oruro~O|Pando~N|Potos\xed~P|Santa Cruz~S|Tarija~T"],["Bonaire, Sint Eustatius and Saba","BQ","Bonaire~BO|Saba Isand~SA|Sint Eustatius~SE"],["Bosnia and Herzegovina","BA","Br\u010dko Distrikt~BRC|Federacija Bosne i Hercegovine~BIH|Republika Srpska~SRP"],["Botswana","BW","Central~CE|Ghanzi~GH|Kgalagadi~KG|Kgatleng~KL|Kweneng~KW|North West~NW|North-East~NE|South East~SE|Southern~SO"],["Bouvet Island","BV","Bouvet Island~BV"],["Brazil","BR","Acre~AC|Alagoas~AL|Amap\xe1~AP|Amazonas~AM|Bahia~BA|Cear\xe1~CE|Distrito Federal~DF|Esp\xedrito Santo~ES|Goi\xe1s~GO|Maranh\xe3o~MA|Mato Grosso~MT|Mato Grosso do Sul~MS|Minas Gerais~MG|Par\xe1~PA|Para\xedba~PB|Paran\xe1~PR|Pernambuco~PE|Piau\xed~PI|Rio de Janeiro~RJ|Rio Grande do Norte~RN|Rio Grande do Sul~RS|Rond\xf4nia~RO|Roraima~RR|Santa Catarina~SC|S\xe3o Paulo~SP|Sergipe~SE|Tocantins~TO"],["British Indian Ocean Territory","IO","British Indian Ocean Territory~IO"],["Brunei Darussalam","BN","Belait~BE|Brunei Muara~BM|Temburong~TE|Tutong~TU"],["Bulgaria","BG","Blagoevgrad~01|Burgas~02|Dobrich~08|Gabrovo~07|Jambol~28|Khaskovo~26|Kjustendil~10|Kurdzhali~09|Lovech~11|Montana~12|Pazardzhik~13|Pernik~14|Pleven~15|Plovdiv~16|Razgrad~17|Ruse~18|Shumen~27|Silistra~19|Sliven~20|Smoljan~21|Sofija~23|Sofija-Grad~22|Stara Zagora~24|Turgovishhe~25|Varna~03|Veliko Turnovo~04|Vidin~05|Vraca~06"],["Burkina Faso","BF","Bal\xe9~BAL|Bam/Lake Bam~BAM|Banwa Province~BAN|Baz\xe8ga~BAZ|Bougouriba~BGR|Boulgou Province~BLG|Boulkiemd\xe9~BLK|Como\xe9/Komoe~COM|Ganzourgou Province~GAN|Gnagna~GNA|Gourma Province~GOU|Houet~HOU|Ioba~IOB|Kadiogo~KAD|K\xe9n\xe9dougou~KEN|Komondjari~KMD|Kompienga~KMP|Kossi Province~KOS|Koulp\xe9logo~KOP|Kouritenga~KOT|Kourw\xe9ogo~KOW|L\xe9raba~LER|Loroum~LOR|Mouhoun~MOU|Namentenga~NAM|Naouri/Nahouri~NAO|Nayala~NAY|Noumbiel~NOU|Oubritenga~OUB|Oudalan~OUD|Passor\xe9~PAS|Poni~PON|Sangui\xe9~SNG|Sanmatenga~SMT|S\xe9no~SEN|Sissili~SIS|Soum~SOM|Sourou~SOR|Tapoa~TAP|Tui/Tuy~TUI|Yagha~YAG|Yatenga~YAT|Ziro~ZIR|Zondoma~ZON|Zoundw\xe9ogo~ZOU"],["Burundi","BI","Bubanza~BB|Bujumbura Mairie~BM|Bujumbura Rural~BL|Bururi~BR|Cankuzo~CA|Cibitoke~CI|Gitega~GI|Karuzi~KR|Kayanza~KY|Kirundo~KI|Makamba~MA|Muramvya~MU|Muyinga~MY|Mwaro~MW|Ngozi~NG|Rutana~RT|Ruyigi~RY"],["Cambodia","KH","Baat Dambang~2|Banteay Mean Chey~1|Kampong Chaam~3|Kampong Chhnang~4|Kampong Spueu~5|Kampong Thum~6|Kampot~7|Kandaal~8|Kaoh Kong~9|Kracheh~10|Krong Kaeb~23|Krong Pailin~24|Krong Preah Sihanouk~18|Mondol Kiri~11|Otdar Mean Chey~22|Phnom Penh~12|Pousaat~15|Preah Vihear~13|Prey Veaeng~14|Rotanah Kiri~16|Siem Reab~17|Stueng Treng~19|Svaay Rieng~20|Taakaev~21|Tbong Khmum~25"],["Cameroon","CM","Adamaoua~AD|Centre~CE|Est~ES|Extr\xeame-Nord~EN|Littoral~LT|Nord~NO|Nord-Ouest~NW|Ouest~OU|Sud~SU|Sud-Ouest~SW"],["Canada","CA","Alberta~AB|British Columbia~BC|Manitoba~MB|New Brunswick~NB|Newfoundland and Labrador~NL|Northwest Territories~NT|Nova Scotia~NS|Nunavut~NU|Ontario~ON|Prince Edward Island~PE|Quebec~QC|Saskatchewan~SK|Yukon~YT"],["Cape Verde","CV","Boa Vista~BV|Brava~BR|Calheta de S\xe3o Miguel~CS|Maio~MA|Mosteiros~MO|Pa\xfal~PA|Porto Novo~PN|Praia~PR|Ribeira Brava~RB|Ribeira Grande~RG|Sal~SL|Santa Catarina~CA|Santa Cruz~CR|S\xe3o Domingos~SD|S\xe3o Filipe~SF|S\xe3o Nicolau~SN|S\xe3o Vicente~SV|Tarrafal~TA|Tarrafal de S\xe3o Nicolau~TS"],["Cayman Islands","KY","Creek~undefined|Eastern~undefined|Midland~undefined|South Town~undefined|Spot Bay~undefined|Stake Bay~undefined|West End~undefined|Western~undefined"],["Central African Republic","CF","Bamingui-Bangoran~BB|Bangui~BGF|Basse-Kotto~BK|Haute-Kotto~HK|Haut-Mbomou~HM|K\xe9mo~KG|Lobaye~LB|Mamb\xe9r\xe9-Kad\xe9\xef~HS|Mbomou~MB|Nana-Grebizi~10|Nana-Mamb\xe9r\xe9~NM|Ombella-M'Poko~MP|Ouaka~UK|Ouham~AC|Ouham P\xe9nd\xe9~OP|Sangha-Mba\xe9r\xe9~SE|Vakaga~VK"],["Chad","TD","Bahr el Ghazal~BG|Batha~BA|Borkou~BO|Chari-Baguirmi~CB|Ennedi-Est~EE|Ennedi-Ouest~EO|Gu\xe9ra~GR|Hadjer Lamis~HL|Kanem~KA|Lac~LC|Logone Occidental~LO|Logone Oriental~LR|Mondoul~MA|Mayo-K\xe9bbi-Est~ME|Moyen-Chari~MC|Ouaddai~OD|Salamat~SA|Sila~SI|Tandjil\xe9~TA|Tibesti~TI|Ville de Ndjamena~ND|Wadi Fira~WF"],["Chile","CL","Ais\xe9n del General Carlos Ib\xe1\xf1ez del Campo~AI|Antofagasta~AN|Araucan\xeda~AR|Arica y Parinacota~AP|Atacama~AT|B\xedo-B\xedo~BI|Coquimbo~CO|Libertador General Bernardo O'Higgins~LI|Los Lagos~LL|Los R\xedos~LR|Magallanes y Antartica Chilena~MA|Marga-Marga~|Maule~ML|Regi\xf3n Metropolitana de Santiago~RM|Tarapac\xe1~TA|Valpara\xedso~VS"],["China","CN","Anhui~34|Beijing~11|Chongqing~50|Fujian~35|Gansu~62|Guangdong~44|Guangxi~45|Guizhou~52|Hainan~46|Hebei~13|Heilongjiang~23|Henan~41|Hong Kong~91|Hubei~42|Hunan~43|Inner Mongolia~15|Jiangsu~32|Jiangxi~36|Jilin~22|Liaoning~21|Macau~92|Ningxia~64|Qinghai~63|Shaanxi~61|Shandong~37|Shanghai~31|Shanxi~14|Sichuan~51|Tianjin~12|Tibet~54|Xinjiang~65|Yunnan~53|Zhejiang~33"],["Christmas Island","CX","Christmas Island~CX"],["Cocos (Keeling) Islands","CC","Direction Island~DI|Home Island~HM|Horsburgh Island~HR|North Keeling Island~NK|South Island~SI|West Island~WI"],["Colombia","CO","Amazonas~AMA|Antioquia~ANT|Arauca~ARA|Archipi\xe9lago de San Andr\xe9s~SAP|Atl\xe1ntico~ATL|Bogot\xe1 D.C.~DC|Bol\xedvar~BOL|Boyac\xe1~BOY|Caldas~CAL|Caquet\xe1~CAQ|Casanare~CAS|Cauca~CAU|Cesar~CES|Choc\xf3~CHO|C\xf3rdoba~COR|Cundinamarca~CUN|Guain\xeda~GUA|Guaviare~GUV|Huila~HUI|La Guajira~LAG|Magdalena~MAG|Meta~MET|Nari\xf1o~NAR|Norte de Santander~NSA|Putumayo~PUT|Quind\xedo~QUI|Risaralda~RIS|Santander~SAN|Sucre~SUC|Tolima~TOL|Valle del Cauca~VAC|Vaup\xe9s~VAU|Vichada~VID"],["Comoros","KM","Andjaz\xeedja~G|Andjou\xe2n~A|Mo\xfbh\xeel\xee~M"],["Congo, Republic of the (Brazzaville)","CG","Bouenza~11|Brazzaville~BZV|Cuvette~8|Cuvette-Ouest~15|Kouilou~5|L\xe9koumou~2|Likouala~7|Niari~9|Plateaux~14|Pointe-Noire~16|Pool~12|Sangha~13"],["Congo, the Democratic Republic of the (Kinshasa)","CD","Bandundu~BN|Bas-Congo~BC|\xc9quateur~EQ|Kasa\xef-Occidental~KE|Kasa\xef-Oriental~KW|Katanga~KA|Kinshasa~KN|Maniema~MA|Nord-Kivu~NK|Orientale~OR|Sud-Kivu~SK"],["Cook Islands","CK","Aitutaki~undefined|Atiu~undefined|Avarua~undefined|Mangaia~undefined|Manihiki~undefined|Ma'uke~undefined|Mitiaro~undefined|Nassau~undefined|Palmerston~undefined|Penrhyn~undefined|Pukapuka~undefined|Rakahanga~undefined"],["Costa Rica","CR","Alajuela~2|Cartago~3|Guanacaste~5|Heredia~4|Lim\xf3n~7|Puntarenas~6|San Jos\xe9~1"],["C\xf4te d'Ivoire, Republic of","CI","Agn\xe9by~16|Bafing~17|Bas-Sassandra~09|Dengu\xe9l\xe9~10|Dix-Huit Montagnes~06|Fromager~18|Haut-Sassandra~02|Lacs~07|Lagunes~01|Marahou\xe9~12|Moyen-Cavally~19|Moyen-Como\xe9~05|N'zi-Como\xe9~11|Savanes~03|Sud-Bandama~15|Sud-Como\xe9~13|Vall\xe9e du Bandama~04|Worodougou~14|Zanzan~08"],["Croatia","HR","Bjelovarsko-Bilogorska \u017dupanija~07|Brodsko-Posavska \u017dupanija~12|Dubrova\u010dko-Neretvanska \u017dupanija~19|Grad Zagreb~21|Istarska \u017dupanija~18|Karlova\u010dka \u017dupanija~04|Koprivni\u010dko-Krizeva\u010dka \u017dupanija~06|Krapinsko-Zagorska \u017dupanija~02|Li\u010dko-Senjska \u017dupanija~09|Me\u0111imurska \u017dupanija~20|Osje\u010dko-Baranjska \u017dupanija~14|Po\u017ee\u0161ko-Slavonska \u017dupanija~11|Primorsko-Goranska \u017dupanija~08|Sisa\u010dko-Moslava\u010dka \u017dupanija~03|Splitsko-Dalmatinska \u017dupanija~17|Sibensko-Kninska \u017dupanija~15|Vara\u017edinska \u017dupanija~05|Viroviti\u010dko-Podravska \u017dupanija~10|Vukovarsko-Srijemska \u017dupanija~16|Zadarska \u017dupanija~13|Zagrebacka Zupanija~01"],["Cuba","CU","Artemisa~15|Camag\xfcey~09|Ciego de \xc1vila~08|Cienfuegos~06|Granma~12|Guant\xe1namo~14|Holgu\xedn~11|Isla de la Juventud~99|La Habana~03|Las Tunas~10|Matanzas~04|Mayabeque~16|Pinar del R\xedo~01|Sancti Sp\xedritus~07|Santiago de Cuba~13|Villa Clara~05"],["Cura\xe7ao","CW","Cura\xe7ao~CW"],["Cyprus","CY","Ammochostos~04|Keryneia~05|Larnaka~03|Lefkosia~01|Lemesos~02|Pafos~05"],["Czech Republic","CZ","Hlavn\xed m\u011bsto Praha~PR|Jiho\u010desk\xfd kraj~JC|Jihomoravsk\xfd kraj~JM|Karlovarsk\xfd kraj~KA|Kr\xe1lov\xe9hradeck\xfd kraj~KR|Libereck\xfd kraj~LI|Moravskoslezsk\xfd kraj~MO|Olomouck\xfd kraj~OL|Pardubick\xfd kraj~PA|Plze\u0148sk\xfd kraj~PL|St\u0159edo\u010desk\xfd kraj~ST|\xdasteck\xfd kraj~US|Vyso\u010dina~VY|Zl\xednsk\xfd kraj~ZL"],["Denmark","DK","Hovedstaden~84|Kujalleq~GL-KU|Midtjylland~82|Norder\xf8erne~FO-01|Nordjylland~81|\xd8ster\xf8~FO-06|Qaasuitsup~GL-QA|Qeqqata~GL-QE|Sand\xf8~FO-02|Sermersooq~GL-SM|Sj\xe6lland~85|Str\xf8m\xf8~FO-03|Suder\xf8~FO-04|Syddanmark~83|V\xe5g\xf8~FO-05"],["Djibouti","DJ","Ali Sabieh~AS|Arta~AR|Dikhil~DI|Obock~OB|Tadjourah~TA"],["Dominica","DM","Saint Andrew Parish~02|Saint David Parish~03|Saint George Parish~04|Saint John Parish~05|Saint Joseph Parish~06|Saint Luke Parish~07|Saint Mark Parish~08|Saint Patrick Parish~09|Saint Paul Parish~10|Saint Peter Parish~11"],["Dominican Republic","DO","Cibao Central~02|Del Valle~37|Distrito Nacional~01|Enriquillo~38|Norcentral~04|Nordeste~34|Noroeste~34|Norte~35|Valdesia~42"],["Ecuador","EC","Azuay~A|Bol\xedvar~B|Ca\xf1ar~F|Carchi~C|Chimborazo~H|Cotopaxi~X|El Oro~O|Esmeraldas~E|Gal\xe1pagos~W|Guayas~G|Imbabura~I|Loja~L|Los R\xedos~R|Manab\xed~M|Morona-Santiago~S|Napo~N|Orellana~D|Pastaza~Y|Pichincha~P|Santa Elena~SE|Santo Domingo de los Ts\xe1chilas~SD|Sucumb\xedos~U|Tungurahua~T|Zamora-Chinchipe~Z"],["Egypt","EG","Alexandria~ALX|Aswan~ASN|Asyout~AST|Bani Sueif~BNS|Beheira~BH|Cairo~C|Daqahlia~DK|Dumiat~DT|El Bahr El Ahmar~BA|El Ismailia~IS|El Suez~SUZ|El Wadi El Gedeed~WAD|Fayoum~FYM|Gharbia~GH|Giza~SUZ|Helwan~HU|Kafr El Sheikh~KFS|Luxor~LX|Matrouh~MT|Menia~MN|Menofia~MNF|North Sinai~SIN|Port Said~PTS|Qalubia~KB|Qena~KN|Sharqia~SHR|Sixth of October~SU|Sohag~SHG|South Sinai~JS"],["El Salvador","SV","Ahuachap\xe1n~AH|Caba\xf1as~CA|Cuscatl\xe1n~CU|Chalatenango~CH|La Libertad~LI|La Paz~PA|La Uni\xf3n~UN|Moraz\xe1n~MO|San Miguel~SM|San Salvador~SS|Santa Ana~SA|San Vicente~SV|Sonsonate~SO|Usulut\xe1n~US"],["Equatorial Guinea","GQ","Annob\xf3n~AN|Bioko Norte~BN|Bioko Sur~BS|Centro Sur~CS|Ki\xe9-Ntem~KN|Litoral~LI|Wele-Nzas~WN"],["Eritrea","ER","Anseba~AN|Debub~DU|Debub-Keih-Bahri~DK|Gash-Barka~GB|Maekel~MA|Semien-Keih-Bahri~SK"],["Estonia","EE","Harjumaa (Tallinn)~37|Hiiumaa (Kardla)~39|Ida-Virumaa (Johvi)~44|J\xe4rvamaa (Paide)~41|J\xf5gevamaa (Jogeva)~49|L\xe4\xe4nemaa~57|L\xe4\xe4ne-Virumaa (Rakvere)~59|P\xe4rnumaa (Parnu)~67|P\xf5lvamaa (Polva)~65|Raplamaa (Rapla)~70|Saaremaa (Kuessaare)~74|Tartumaa (Tartu)~78|Valgamaa (Valga)~82|Viljandimaa (Viljandi)~84|V\xf5rumaa (Voru)~86"],["Ethiopia","ET","Addis Ababa~AA|Afar~AF|Amhara~AM|Benshangul-Gumaz~BE|Dire Dawa~DD|Gambela~GA|Harari~HA|Oromia~OR|Somali~SO|Southern Nations Nationalities and People's Region~SN|Tigray~TI"],["Falkland Islands (Islas Malvinas)","FK","Falkland Islands (Islas Malvinas)~undefined"],["Faroe Islands","FO","Bordoy~undefined|Eysturoy~undefined|Mykines~undefined|Sandoy~undefined|Skuvoy~undefined|Streymoy~undefined|Suduroy~undefined|Tvoroyri~undefined|Vagar~undefined"],["Fiji","FJ","Ba~01|Bua~01|Cakaudrove~03|Kadavu~04|Lau~05|Lomaiviti~06|Macuata~07|Nadroga and Navosa~08|Naitasiri~09|Namosi~10|Ra~011|Rewa~12|Rotuma~R|Serua~12|Tailevu~14"],["Finland","FI","Ahvenanmaan l\xe4\xe4ni~AL|Etel\xe4-Suomen l\xe4\xe4ni~ES|It\xe4-Suomen l\xe4\xe4ni~IS|L\xe4nsi-Suomen l\xe4\xe4ni~LS|Lapin l\xe4\xe4ni~LL|Oulun l\xe4\xe4ni~OL"],["France","FR","Auvergne-Rh\xf4ne-Alpes~ARA|Bourgogne-Franche-Comt\xe9~BFC|Bretagne~BRE|Centre-Val de Loire~CVL|Corse~COR|Grand Est~GES|Hauts-de-France~HDF|\xcele-de-France~IDF|Normandie~NOR|Nouvelle-Aquitaine~NAQ|Occitanie~OCC|Pays de la Loire~PDL|Provence-Alpes-Cote d'Azur~PAC|Clipperton~CP|Guadeloupe~GP|Guyane~GF|Martinique~MQ|Mayotte~YT|Novelle-Cal\xe9donie~NC|Polyn\xe9sie~PF|Saint-Pierre-et-Miquelon~PM|Saint Barth\xe9lemy~BL|Saint Martin~MF|R\xe9union~RE|Terres Australes Fran\xe7aises~TF|Wallis-et-Futuna~WF"],["French Guiana","GF","French Guiana~undefined"],["French Polynesia","PF","Archipel des Marquises~undefined|Archipel des Tuamotu~undefined|Archipel des Tubuai~undefined|Iles du Vent~undefined|Iles Sous-le-Vent~undefined"],["French Southern and Antarctic Lands","TF","Adelie Land~undefined|Ile Crozet~undefined|Iles Kerguelen~undefined|Iles Saint-Paul et Amsterdam~undefined"],["Gabon","GA","Estuaire~1|Haut-Ogoou\xe9~2|Moyen-Ogoou\xe9~3|Ngouni\xe9~4|Nyanga~5|Ogoou\xe9-Ivindo~6|Ogoou\xe9-Lolo~7|Ogoou\xe9-Maritime~8|Woleu-Ntem~9"],["Gambia, The","GM","Banjul~B|Central River~M|Lower River~L|North Bank~N|Upper River~U|Western~W"],["Georgia","GE","Abkhazia (Sokhumi)~AB|Ajaria (Bat'umi)~AJ|Guria~GU|Imereti~IM|K'akheti~KA|Kvemo Kartli~KK|Mtshkheta-Mtianeti~MM|Rach'a-Lexhkumi-KvemoSvaneti~RL|Samegrelo-Zemo Svaneti~SZ|Samtskhe-Javakheti~SJ|Shida Kartli~SK|Tbilisi~TB"],["Germany","DE","Baden-W\xfcrttemberg~BW|Bayern~BY|Berlin~BE|Brandenburg~BB|Bremen~HB|Hamburg~HH|Hessen~HE|Mecklenburg-Vorpommern~MV|Niedersachsen~NI|Nordrhein-Westfalen~NW|Rheinland-Pfalz~RP|Saarland~SL|Sachsen~SN|Sachsen-Anhalt~ST|Schleswig-Holstein~SH|Th\xfcringen~TH"],["Ghana","GH","Ashanti~AH|Brong-Ahafo~BA|Central~CP|Eastern~EP|Greater Accra~AA|Northern~NP|Upper East~UE|Upper West~UW|Volta~TV|Western~WP"],["Gibraltar","GI","Gibraltar~undefined"],["Greece","GR","Anatolik\xed Makedon\xeda kai Thr\xe1ki~A|Attik\u1e2f~I|Dytik\xed Ell\xe1da~G|Dytik\xed Makedon\xeda~C|Ion\xeda N\xedsia~F|Kentrik\xed Makedon\xeda~B|Kr\xedt\xed~M|Not\xedo Aiga\xedo~L|Peloponn\xedsos~J|Stere\xe1 Ell\xe1da~H|Thessal\xeda~E|Vore\xedo Aiga\xedo~K|\xcdpeiros~D|\xc1gion \xd3ros~69"],["Greenland","GL","Kommune Kujalleq~KU|Kommuneqarfik Sermersooq~SM|Qaasuitsup Kommunia~QA|Qeqqata Kommunia~QE"],["Grenada","GD","Saint Andrew~01|Saint David~02|Saint George~03|Saint John~04|Saint Mark~05|Saint Patrick~06|Southern Grenadine Islands~10"],["Guadeloupe","GP","Guadeloupe~undefined"],["Guam","GU","Guam~undefined"],["Guatemala","GT","Alta Verapaz~AV|Baja Verapaz~BV|Chimaltenango~CM|Chiquimula~CQ|El Progreso~PR|Escuintla~ES|Guatemala~GU|Huehuetenango~HU|Izabal~IZ|Jalapa~JA|Jutiapa~JU|Pet\xe9n~PE|Quetzaltenango~QZ|Quich\xe9~QC|Retalhuleu~Re|Sacatep\xe9quez~SA|San Marcos~SM|Santa Rosa~SR|Solol\xe1~SO|Suchitep\xe9quez~SU|Totonicap\xe1n~TO|Zacapa~ZA"],["Guernsey","GG","Castel~undefined|Forest~undefined|St. Andrew~undefined|St. Martin~undefined|St. Peter Port~undefined|St. Pierre du Bois~undefined|St. Sampson~undefined|St. Saviour~undefined|Torteval~undefined|Vale~undefined"],["Guinea","GN","Bok\xe9~B|Conakry~C|Faranah~F|Kankan~K|Kindia~D|Lab\xe9~L|Mamou~M|Nz\xe9r\xe9kor\xe9~N"],["Guinea-Bissau","GW","Bafat\xe1~BA|Biombo~BM|Bissau~BS|Bolama-Bijagos~BL|Cacheu~CA|Gab\xfa~GA|Oio~OI|Quinara~QU|Tombali~TO"],["Guyana","GY","Barima-Waini~BA|Cuyuni-Mazaruni~CU|Demerara-Mahaica~DE|East Berbice-Corentyne~EB|Essequibo Islands-West Demerara~ES|Mahaica-Berbice~MA|Pomeroon-Supenaam~PM|Potaro-Siparuni~PT|Upper Demerara-Berbice~UD|Upper Takutu-Upper Essequibo~UT"],["Haiti","HT","Artibonite~AR|Centre~CE|Grand'Anse~GA|Nippes~NI|Nord~ND|Nord-Est~NE|Nord-Ouest~NO|Ouest~OU|Sud~SD|Sud-Est~SE"],["Heard Island and McDonald Islands","HM","Heard Island and McDonald Islands~undefined"],["Holy See (Vatican City)","VA","Holy See (Vatican City)~01"],["Honduras","HN","Atl\xe1ntida~AT|Choluteca~CH|Col\xf3n~CL|Comayagua~CM|Cop\xe1n~CP|Cort\xe9s~CR|El Para\xedso~EP|Francisco Morazan~FM|Gracias a Dios~GD|Intibuc\xe1~IN|Islas de la Bah\xeda~IB|La Paz~LP|Lempira~LE|Ocotepeque~OC|Olancho~OL|Santa B\xe1rbara~SB|Valle~VA|Yoro~YO"],["Hong Kong","HK","Hong Kong~undefined"],["Hungary","HU","B\xe1cs-Kiskun~BK|Baranya~BA|B\xe9k\xe9s~BE|B\xe9k\xe9scsaba~BC|Borsod-Abauj-Zemplen~BZ|Budapest~BU|Csongr\xe1d~CS|Debrecen~DE|Duna\xfajv\xe1ros~DU|Eger~EG|\xc9rd~ER|Fej\xe9r~FE|Gy\u0151r~GY|Gy\u0151r-Moson-Sopron~GS|Hajd\xfa-Bihar~HB|Heves~HE|H\xf3dmez\u0151v\xe1s\xe1rhely~HV|J\xe1sz-Nagykun-Szolnok~N|Kaposv\xe1r~KV|Kecskem\xe9t~KM|Kom\xe1rom-Esztergom~KE|Miskolc~MI|Nagykanizsa~NK|N\xf3gr\xe1d~NO|Ny\xedregyh\xe1za~NY|P\xe9cs~PS|Pest~PE|Salg\xf3tarj\xe1n~ST|Somogy~SO|Sopron~SN|Szabolcs-\xe1-Bereg~SZ|Szeged~SD|Sz\xe9kesfeh\xe9rv\xe1r~SF|Szeksz\xe1rd~SS|Szolnok~SK|Szombathely~SH|Tatab\xe1nya~TB|Tolna~TO|Vas~VA|Veszpr\xe9m~VE|Veszpr\xe9m (City)~VM|Zala~ZA|Zalaegerszeg~ZE"],["Iceland","IS","Austurland~7|H\xf6fu\xf0borgarsv\xe6\xf0i utan Reykjav\xedkur~1|Nor\xf0urland eystra~6|Nor\xf0urland vestra~5|Su\xf0urland~8|Su\xf0urnes~2|Vestfir\xf0ir~4|Vesturland~3"],["India","IN","Andaman and Nicobar Islands~AN|Andhra Pradesh~AP|Arunachal Pradesh~AR|Assam~AS|Bihar~BR|Chandigarh~CH|Chhattisgarh~CT|Dadra and Nagar Haveli~DN|Daman and Diu~DD|Delhi~DL|Goa~GA|Gujarat~GJ|Haryana~HR|Himachal Pradesh~HP|Jammu and Kashmir~JK|Jharkhand~JH|Karnataka~KA|Kerala~KL|Lakshadweep~LD|Madhya Pradesh~MP|Maharashtra~MH|Manipur~MN|Meghalaya~ML|Mizoram~MZ|Nagaland~NL|Odisha~OR|Puducherry~PY|Punjab~PB|Rajasthan~RJ|Sikkim~WK|Tamil Nadu~TN|Telangana~TG|Tripura~TR|Uttarakhand~UT|Uttar Pradesh~UP|West Bengal~WB"],["Indonesia","ID","Aceh~AC|Bali~BA|Bangka Belitung~BB|Banten~BT|Bengkulu~BE|Gorontalo~GO|Jakarta Raya~JK|Jambi~JA|Jawa Barat~JB|Jawa Tengah~JT|Jawa Timur~JI|Kalimantan Barat~KB|Kalimantan Selatan~KS|Kalimantan Tengah~KT|Kalimantan Timur~KI|Kalimantan Utara~KU|Kepulauan Riau~KR|Lampung~LA|Maluku~MA|Maluku Utara~MU|Nusa Tenggara Barat~NB|Nusa Tenggara Timur~NT|Papua~PA|Papua Barat~PB|Riau~RI|Sulawesi Selatan~SR|Sulawesi Tengah~ST|Sulawesi Tenggara~SG|Sulawesi Utara~SA|Sumatera Barat~SB|Sumatera Selatan~SS|Sumatera Utara~SU|Yogyakarta~YO"],["Iran, Islamic Republic of","IR","Alborz~32|Ardab\u012bl~03|\u0100z\u0304arb\u0101yj\u0101n-e Gharb\u012b~02|\u0100z\u0304arb\u0101yj\u0101n-e Sharq\u012b~01|B\u016bshehr~06|Chah\u0101r Ma\u1e29\u0101l va Bakht\u012b\u0101r\u012b~08|E\u015ffah\u0101n~04|F\u0101rs~14|G\u012bl\u0101n~19|Golest\u0101n~27|Hamad\u0101n~24|Hormozg\u0101n~23|\u012al\u0101m~05|Kerm\u0101n~15|Kerm\u0101nsh\u0101h~17|Khor\u0101s\u0101n-e Jon\u016bb\u012b~29|Khor\u0101s\u0101n-e Ra\u1e95av\u012b~30|Khor\u0101s\u0101n-e Shom\u0101l\u012b~61|Kh\u016bzest\u0101n~10|Kohg\u012bl\u016byeh va Bowyer A\u1e29mad~18|Kordest\u0101n~16|Lorest\u0101n~20|Markazi~22|M\u0101zandar\u0101n~21|Qazv\u012bn~28|Qom~26|Semn\u0101n~12|S\u012bst\u0101n va Bal\u016bchest\u0101n~13|Tehr\u0101n~07|Yazd~25|Zanj\u0101n~11"],["Iraq","IQ","Al Anb\u0101r~AN|Al Ba\u015frah~BA|Al Muthann\xe1~MU|Al Q\u0101dis\u012byah~QA|An Najaf~NA|Arb\u012bl~AR|As Sulaym\u0101n\u012byah~SU|B\u0101bil~BB|Baghd\u0101d~BG|Dohuk~DA|Dh\u012b Q\u0101r~DQ|Diy\u0101l\xe1~DI|Karbal\u0101'~KA|Kirkuk~KI|Mays\u0101n~MA|N\u012bnaw\xe1~NI|\u015eal\u0101\u1e29 ad D\u012bn~SD|W\u0101si\u0163~WA"],["Ireland","IE","Carlow~CW|Cavan~CN|Clare~CE|Cork~CO|Donegal~DL|Dublin~D|Galway~G|Kerry~KY|Kildare~KE|Kilkenny~KK|Laois~LS|Leitrim~LM|Limerick~LK|Longford~LD|Louth~LH|Mayo~MO|Meath~MH|Monaghan~MN|Offaly~OY|Roscommon~RN|Sligo~SO|Tipperary~TA|Waterford~WD|Westmeath~WH|Wexford~WX|Wicklow~WW"],["Isle of Man","IM","Isle of Man~undefined"],["Israel","IL","HaDarom~D|HaMerkaz~M|HaTsafon~Z|H\u0331efa~HA|Tel-Aviv~TA|Yerushalayim~JM"],["Italy","IT","Abruzzo~65|Basilicata~77|Calabria~78|Campania~72|Emilia-Romagna~45|Friuli-Venezia Giulia~36|Lazio~62|Liguria~42|Lombardia~25|Marche~57|Molise~67|Piemonte~21|Puglia~75|Sardegna~88|Sicilia~82|Toscana~52|Trentino-Alto Adige~32|Umbria~55|Valle d'Aosta~23|Veneto~34"],["Jamaica","JM","Clarendon~13|Hanover~09|Kingston~01|Manchester~12|Portland~04|Saint Andrew~02|Saint Ann~06|Saint Catherine~14|Saint Elizabeth~11|Saint James~08|Saint Mary~05|Saint Thomas~03|Trelawny~07|Westmoreland~10"],["Japan","JP","Aichi~23|Akita~05|Aomori~02|Chiba~12|Ehime~38|Fukui~18|Fukuoka~40|Fukushima~07|Gifu~21|Gunma~10|Hiroshima~34|Hokkaido~01|Hyogo~28|Ibaraki~08|Ishikawa~17|Iwate~03|Kagawa~37|Kagoshima~46|Kanagawa~14|Kochi~39|Kumamoto~43|Kyoto~26|Mie~24|Miyagi~04|Miyazaki~45|Nagano~20|Nagasaki~42|Nara~29|Niigata~15|Oita~44|Okayama~33|Okinawa~47|Osaka~27|Saga~41|Saitama~11|Shiga~25|Shimane~32|Shizuoka~22|Tochigi~09|Tokushima~36|Tokyo~13|Tottori~31|Toyama~16|Wakayama~30|Yamagata~06|Yamaguchi~35|Yamanashi~19"],["Jersey","JE","Jersey~undefined"],["Jordan","JO","\u2018Ajl\u016bn~AJ|Al 'Aqabah~AQ|Al Balq\u0101\u2019~BA|Al Karak~KA|Al Mafraq~MA|Al \u2018A\u0305\u015fimah~AM|A\u0163 \u0162af\u012blah~AT|Az Zarq\u0101\u2019~AZ|Irbid~IR|Jarash~JA|Ma\u2018\u0101n~MN|M\u0101dab\u0101~MD"],["Kazakhstan","KZ","Almaty~ALA|Aqmola~AKM|Aqtobe~AKT|Astana~AST|Atyrau~ATY|Batys Qazaqstan~ZAP|Bayqongyr~undefined|Mangghystau~MAN|Ongtustik Qazaqstan~YUZ|Pavlodar~PAV|Qaraghandy~KAR|Qostanay~KUS|Qyzylorda~KZY|Shyghys Qazaqstan~VOS|Soltustik Qazaqstan~SEV|Zhambyl~ZHA"],["Kenya","KE","Baringo~01|Bomet~02|Bungoma~03|Busia~04|Eleyo/Marakwet~05|Embu~06|Garissa~07|Homa Bay~08|Isiolo~09|Kajiado~10|Kakamega~11|Kericho~12|Kiambu~13|Kilifi~14|Kirinyaga~15|Kisii~16|Kisumu~17|Kitui~18|Kwale~19|Laikipia~20|Lamu~21|Machakos~22|Makueni~23|Mandera~24|Marsabit~25|Meru~26|Migori~27|Mombasa~28|Murang'a~29|Nairobi City~30|Nakuru~31|Nandi~32|Narok~33|Nyamira~34|Nyandarua~35|Nyeri~36|Samburu~37|Siaya~38|Taita/Taveta~39|Tana River~40|Tharaka-Nithi~41|Trans Nzoia~42|Turkana~43|Uasin Gishu~44|Vihiga~45|Wajir~46|West Pokot~47"],["Kiribati","KI","Abaiang~undefined|Abemama~undefined|Aranuka~undefined|Arorae~undefined|Banaba~undefined|Beru~undefined|Butaritari~undefined|Central Gilberts~undefined|Gilbert Islands~G|Kanton~undefined|Kiritimati~undefined|Kuria~undefined|Line Islands~L|Maiana~undefined|Makin~undefined|Marakei~undefined|Nikunau~undefined|Nonouti~undefined|Northern Gilberts~undefined|Onotoa~undefined|Phoenix Islands~P|Southern Gilberts~undefined|Tabiteuea~undefined|Tabuaeran~undefined|Tamana~undefined|Tarawa~undefined|Teraina~undefined"],["Korea, Democratic People's Republic of","KP","Chagang-do (Chagang Province)~04|Hamgyong-bukto (North Hamgyong Province)~09|Hamgyong-namdo (South Hamgyong Province)~08|Hwanghae-bukto (North Hwanghae Province)~06|Hwanghae-namdo (South Hwanghae Province)~05|Kangwon-do (Kangwon Province)~07|Nas\u014fn (Najin-S\u014fnbong)~13|P'yongan-bukto (North P'yongan Province)~03|P'yongan-namdo (South P'yongan Province)~02|P'yongyang-si (P'yongyang City)~01|Yanggang-do (Yanggang Province)~10"],["Korea, Republic of","KR","Ch'ungch'ongbuk-do~43|Ch'ungch'ongnam-do~44|Cheju-do~49|Chollabuk-do~45|Chollanam-do~46|Inch'on-Kwangyokhi~28|Kang-won-do~42|Kwangju-Kwangyokshi~28|Kyonggi-do~41|Kyongsangbuk-do~47|Kyongsangnam-do~48|Pusan-Kwangyokshi~26|Seoul-T'ukpyolshi~11|Sejong~50|Taegu-Kwangyokshi~27|Taejon-Kwangyokshi~30|Ulsan-Kwangyokshi~31"],["Kuwait","KW","Al A\u1e29madi~AH|Al Farw\u0101n\u012byah~FA|Al Jahr\u0101\u2019~JA|Al \u2018\u0100\u015fimah~KU|\u1e28awall\u012b~HA|Mub\u0101rak al Kabir~MU"],["Kyrgyzstan","KG","Batken Oblasty~B|Bishkek Shaary~GB|Chuy Oblasty (Bishkek)~C|Jalal-Abad Oblasty~J|Naryn Oblasty~N|Osh Oblasty~O|Talas Oblasty~T|Ysyk-Kol Oblasty (Karakol)~Y"],["Laos","LA","Attapu~AT|Bok\xe8o~BK|Bolikhamxai~BL|Champasak~CH|Houaphan~HO|Khammouan~KH|Louang Namtha~LM|Louangphabang~LP|Oud\xf4mxai~OU|Ph\xf4ngsali~PH|Salavan~SL|Savannakh\xe9t~SV|Vientiane~VI|Xaignabouli~XA|X\xe9kong~XE|Xaisomboun~XS|Xiangkhouang~XI"],["Latvia","LV","Aglona~001|Aizkraukle~002|Aizpute~003|Akn\u012bste~004|Aloja~005|Alsunga~06|Al\u016bksne~007|Amata~008|Ape~009|Auce~010|\u0100da\u017ei~011|Bab\u012bte~012|Baldone~013|Baltinava~014|Balvi~015|Bauska~016|Bever\u012bna~017|Broc\u0113ni~018|Burtnieki~019|Carnikava~020|Cesvaine~021|C\u0113sis~022|Cibla~023|Dagda~024|Daugavpils~025|Daugavpils (City)~DGV|Dobele~026|Dundaga~027|Durbe~028|Engure~029|\u0112rg\u013ci~030|Garkalne~031|Grobi\u0146a~032|Gulbene~033|Iecava~034|Ik\u0161\u0137ile~035|Il\u016bkste~036|In\u010dukalns~037|Jaunjelgava~038|Jaunpiebalga~039|Jaunpils~040|Jelgava~041|Jelgava (City)~JEL|J\u0113kabpils~042|J\u0113kabpils (City)~JKB|J\u016brmala (City)~JUR|Kandava~043|K\u0101rsava~044|Koc\u0113ni~045|Koknese~046|Kr\u0101slava~047|Krimulda~048|Krustpils~049|Kuld\u012bga~050|\u0136egums~051|\u0136ekava~052|Lielv\u0101rde~053|Liep\u0101ja~LPX|Limba\u017ei~054|L\u012bgatne~055|L\u012bv\u0101ni~056|Lub\u0101na~057|Ludza~058|Madona~059|Mazsalaca~060|M\u0101lpils~061|M\u0101rupe~062|M\u0113rsrags~063|Nauk\u0161\u0113ni~064|Nereta~065|N\u012bca~066|Ogre~067|Olaine~068|Ozolnieki~069|P\u0101rgauja~070|P\u0101vilosta~071|P\u013cavi\u0146as~072|Prei\u013ci~073|Priekule~074|Prieku\u013ci~075|Rauna~076|R\u0113zekne~077|R\u0113zekne (City)~REZ|Riebi\u0146i~078|R\u012bga~RIX|Roja~079|Ropa\u017ei~080|Rucava~081|Rug\u0101ji~082|Rund\u0101le~083|R\u016bjiena~084|Sala~085|Salacgr\u012bva~086|Salaspils~087|Saldus~088|Saulkrasti~089|S\u0113ja~090|Sigulda~091|Skr\u012bveri~092|Skrunda~093|Smiltene~094|Stopi\u0146i~095|Stren\u010di~096|Talsi~097|T\u0113rvete~098|Tukums~099|Vai\u0146ode~100|Valka~101|Valmiera~VMR|Varak\u013c\u0101ni~102|V\u0101rkava~103|Vecpiebalga~104|Vecumnieki~105|Ventspils~106|Ventspils (City)~VEN|Vies\u012bte~107|Vi\u013caka~108|Vi\u013c\u0101ni~109|Zilupe~110"],["Lebanon","LB","Aakk\xe2r~AK|Baalbelk-Hermel~BH|B\xe9qaa~BI|Beyrouth~BA|Liban-Nord~AS|Liban-Sud~JA|Mont-Liban~JL|Nabat\xeey\xe9~NA"],["Lesotho","LS","Berea~D|Butha-Buthe~B|Leribe~C|Mafeteng~E|Maseru~A|Mohales Hoek~F|Mokhotlong~J|Qacha's Nek~H|Quthing~G|Thaba-Tseka~K"],["Liberia","LR","Bomi~BM|Bong~BG|Gbarpolu~GP|Grand Bassa~GB|Grand Cape Mount~CM|Grand Gedeh~GG|Grand Kru~GK|Lofa~LO|Margibi~MG|Maryland~MY|Montserrado~MO|Nimba~NI|River Cess~RI|River Geee~RG|Sinoe~SI"],["Libya","LY","Al Bu\u0163n\u0101n~BU|Al Jabal al Akh\u1e11ar~JA|Al Jabal al Gharb\u012b~JG|Al Jaf\u0101rah~JA|Al Jufrah~JU|Al Kufrah~FK|Al Marj~MJ|Al Marquab~MB|Al W\u0101\u1e29\u0101t~WA|An Nuqa\u0163 al Khams~NQ|Az Z\u0101wiyah~ZA|Bangh\u0101z\u012b~BA|Darnah~DR|Gh\u0101t~GH|Mi\u015fr\u0101tah~MI|Murzuq~MQ|N\u0101l\u016bt~NL|Sabh\u0101~SB|Surt~SR|\u0162ar\u0101bulus~TB|Yafran~WD|W\u0101d\u012b ash Sh\u0101\u0163i\u02be~WS"],["Liechtenstein","LI","Balzers~01|Eschen~02|Gamprin~03|Mauren~04|Planken~05|Ruggell~06|Schaan~07|Schellenberg~08|Triesen~09|Triesenberg~10|Vaduz~11"],["Lithuania","LT","Alytaus~AL|Kauno~KU|Klaip\u0117dos~KL|Marijampol\u0117s~MR|Panev\u0117\u017eio~PN|\u0160iauli\u0173~SA|Taurag\u0117s~TA|Tel\u0161i\u0173~TE|Utenos~UT|Vilniaus~VL"],["Luxembourg","LU","Capellen~CA|Clevaux~CL|Diekirch~DI|Echternach~EC|Esch-sur-Alzette~ES|Grevenmacher~GR|Luxembourg~LU|Mersch~ME|Redange~RD|Remich~RM|Vianden~VD|Wiltz~WI"],["Macao","MO","Macao~undefined"],["Macedonia, Republic of","MK","Ara\u010dinovo~02|Berovo~03|Bitola~04|Bogdanci~05|Bogovinje~06|Bosilovo~07|Brvenica~08|Centar \u017dupa~78|\u010ca\u0161ka~08|\u010ce\u0161inovo-Oble\u0161evo~81|\u010cu\u010der Sandevo~82|Debar~21|Debarca~22|Del\u010devo~23|Demir Hisar~25|Demir Kapija~24|Doran~26|Dolneni~27|Gevgelija~18|Gostivar~19|Gradsko~20|Ilinden~34|Jegunovce~35|Karbinci~37|Kavadarci~36|Ki\u010devo~40|Ko\u010dani~42|Kon\u010de~41|Kratovo~43|Kriva Palanka~44|Krivoga\u0161tani~45|Kru\u0161evo~46|Kumanovo~47|Lipkovo~48|Lozovo~49|Makedonska Kamenica~51|Makedonski Brod~52|Mavrovo i Rostu\u0161a~50|Mogila~53|Negotino~54|Novaci~55|Novo Selo~56|Ohrid~58|Peh\u010devo~60|Petrovec~59|Plasnica~61|Prilep~62|Probi\u0161tip~63|Radovi\u0161~|Rankovce~65|Resen~66|Rosoman~67|Skopje~85|Sopi\u0161te~70|Staro Nagori\u010dane~71|Struga~72|Strumica~73|Studeni\u010dani~74|Sveti Nikole~69|\u0160tip~83|Tearce~75|Tetovo~76|Valandovo~10|Vasilevo~11|Veles~13|Vev\u010dani~12|Vinica~14|Vrap\u010di\u0161te~16|Zelenikovo~32|Zrnovci~33|\u017delino~30"],["Madagascar","MG","Antananarivo~T|Antsiranana~D|Fianarantsoa~F|Mahajanga~M|Toamasina~A|Toliara~U"],["Malawi","MW","Balaka~BA|Blantyre~BL|Chikwawa~CK|Chiradzulu~CR|Chitipa~CT|Dedza~DE|Dowa~DO|Karonga~KR|Kasungu~KS|Likoma~LK|Lilongwe~LI|Machinga~MH|Mangochi~MG|Mchinji~MC|Mulanje~MU|Mwanza~MW|Mzimba~MZ|Nkhata Bay~NE|Nkhotakota~NB|Nsanje~NS|Ntcheu~NU|Ntchisi~NI|Phalombe~PH|Rumphi~RU|Salima~SA|Thyolo~TH|Zomba~ZO"],["Malaysia","MY","Johor~01|Kedah~02|Kelantan~03|Melaka~04|Negeri Sembilan~05|Pahang~06|Perak~08|Perlis~09|Pulau Pinang~07|Sabah~12|Sarawak~13|Selangor~10|Terengganu~11|Wilayah Persekutuan (Kuala Lumpur)~14|Wilayah Persekutuan (Labuan)~15|Wilayah Persekutuan (Putrajaya)~16"],["Maldives","MV","Alifu Alifu~02|Alifu Dhaalu~00|Baa~20|Dhaalu~17|Faafu~14|Gaafu Alifu~27|Gaafu Dhaalu~28|Gnaviyani~29|Haa Alifu~07|Haa Dhaalu~23|Kaafu~29|Laamu~05|Lhaviyani~03|Mal\xe9~MLE|Meemu~12|Noonu~25|Raa~13|Seenu~01|Shaviyani~24|Thaa~08|Vaavu~04"],["Mali","ML","Bamako~BKO|Gao~7|Kayes~1|Kidal~8|Koulikoro~2|Mopti~5|Segou~4|Sikasso~3|Tombouctou~6"],["Malta","MT","Attard~01|Balzan~02|Birgu~03|Birkirkara~04|Bir\u017cebbu\u0121a~05|Bormla~06|Dingli~07|Fgura~08|Floriana~09|Fontana~10|Guda~11|G\u017cira~12|G\u0127ajnsielem~13|G\u0127arb~14|G\u0127arg\u0127ur~15|G\u0127asri~16|G\u0127axaq~17|\u0126amrun~18|Iklin~19|Isla~20|Kalkara~21|Ker\u010bem~22|Kirkop~23|Lija~24|Luqa~25|Marsa~26|Marsaskala~27|Marsaxlokk~28|Mdina~29|Mellie\u0127a~30|M\u0121arr~31|Mosta~32|Mqabba~33|Msida~34|Mtarfa~35|Munxar~36|Nadur~37|Naxxar~38|Paola~39|Pembroke~40|Piet\xe0~41|Qala~42|Qormi~43|Qrendi~44|Rabat G\u0127awdex~45|Rabat Malta~46|Safi~47|San \u0120iljan~48|San \u0120wann~49|San Lawrenz~50|San Pawl il-Ba\u0127ar~51|Sannat~52|Santa Lu\u010bija~53|Santa Venera~54|Si\u0121\u0121iewi~55|Sliema~56|Swieqi~57|Tai Xbiex~58|Tarzien~59|Valletta~60|Xag\u0127ra~61|Xewkija~62|Xg\u0127ajra~63|\u017babbar~64|\u017bebbu\u0121 G\u0127awde~65|\u017bebbu\u0121 Malta~66|\u017bejtun~67|\u017burrieq~68"],["Marshall Islands","MH","Ailinglaplap~ALL|Ailuk~ALK|Arno~ARN|Aur~AUR|Bikini and Kili~KIL|Ebon~EBO|Jabat~JAB|Jaluit~JAL|Kwajalein~KWA|Lae~LAE|Lib~LIB|Likiep~LIK|Majuro~MAJ|Maloelap~MAL|Mejit~MEJ|Namdrik~NMK|Namu~NMU|Rongelap~RON|Ujae~UJA|Utrik~UTI|Wotho~WTH|Wotje~WTJ"],["Martinique","MQ","Martinique~undefined"],["Mauritania","MR","Adrar~07|Assaba~03|Brakna~05|Dakhlet Nouadhibou~08|Gorgol~04|Guidimaka~10|Hodh Ech Chargui~01|Hodh El Gharbi~02|Inchiri~12|Nouakchott Nord~14|Nouakchott Ouest~13|Nouakchott Sud~15|Tagant~09|Tiris Zemmour~11|Trarza~06"],["Mauritius","MU","Agalega Islands~AG|Beau Bassin-Rose Hill~BR|Black River~BL|Cargados Carajos Shoals~CC|Curepipe~CU|Flacq~FL|Grand Port~GP|Moka~MO|Pamplemousses~PA|Plaines Wilhems~PW|Port Louis (City)~PU|Port Louis~PL|Riviere du Rempart~RR|Rodrigues Island~RO|Savanne~SA|Vacoas-Phoenix~CP"],["Mayotte","YT","Dzaoudzi~01|Pamandzi~02|Mamoudzou~03|Dembeni~04|Bandr\xe9l\xe9~05|Kani-K\xe9li~06|Bou\xe9ni~07|Chirongui~08|Sada~09|Ouangani~10|Chiconi~11|Tsingoni~12|M'Tsangamouji~13|Acoua~14|Mtsamboro~15|Bandraboua~16|Koungou~17"],["Mexico","MX","Aguascalientes~AGU|Baja California~BCN|Baja California Sur~BCS|Campeche~CAM|Ciudad de M\xe9xico~DIF|Chiapas~CHP|Chihuahua~CHH|Coahuila de Zaragoza~COA|Colima~COL|Durango~DUR|Estado de M\xe9xico~MEX|Guanajuato~GUA|Guerrero~GRO|Hidalgo~HID|Jalisco~JAL|Michoac\xe1n de Ocampo~MIC|Morelos~MOR|Nayarit~NAY|Nuevo Le\xf3n~NLE|Oaxaca~OAX|Puebla~PUE|Quer\xe9taro de Arteaga~QUE|Quintana Roo~ROO|San Luis Potos\xed~SLP|Sinaloa~SIN|Sonora~SON|Tabasco~TAB|Tamaulipas~TAM|Tlaxcala~TLA|Veracruz~VER|Yucat\xe1n~YUC|Zacatecas~ZAC"],["Micronesia, Federated States of","FM","Chuuk (Truk)~TRK|Kosrae~KSA|Pohnpei~PNI|Yap~YAP"],["Moldova","MD","Aenii Noi~AN|Basarabeasca~BS|B\u0103l\u021bi~BA|Bender~BD|Briceni~BR|Cahul~CA|Cantemir~CT|C\u0103l\u0103ra\u0219i~CL|C\u0103u\u0219eni~CS|Chi\u0219in\u0103u~CU|Cimi\u0219lia~CM|Criuleni~CR|Dondu\u0219eni~DO|Drochia~DR|Dub\u0103sari~DU|Edine\u021b~ED|F\u0103le\u0219ti~FA|Flore\u0219ti~FL|G\u0103g\u0103uzia~GA|Glodeni~GL|H\xeence\u0219ti~HI|Ialoveni~IA|Leova~LE|Nisporeni~NI|Ocni\u021ba~OC|Orhei~OR|Rezina~RE|R\xee\u0219cani~RI|S\xeengerei~SI|Soroca~SO|St\xeenga Nistrului~SN|Str\u0103\u0219eni~ST|\u0218old\u0103ne\u0219ti~SD|\u0218tefan Vod\u0103~SV|Taraclia~TA|Telene\u0219ti~TE|Ungheni~UN"],["Monaco","MC","Colle~CL|Condamine~CO|Fontvieille~FO|Gare~GA|Jardin Exotique~JE|Larvotto~LA|Malbousquet~MA|Monaco-Ville~MO|Moneghetti~MG|Monte-Carlo~MC|Moulins~MU|Port-Hercule~PH|Saint-Roman~SR|Sainte-D\xe9vote~SD|Source~SO|Sp\xe9lugues~SP|Vallon de la Rousse~VR"],["Mongolia","MN","Arhangay~073|Bayan-Olgiy~071|Bayanhongor~069|Bulgan~067|Darhan~037|Dornod~061|Dornogovi~063|Dundgovi~059|Dzavhan~065|Govi-Altay~065|Govi-Sumber~064|Hovd~043|Hovsgol~041|Omnogovi~053|Ovorhangay~055|Selenge~049|Suhbaatar~051|Tov~047|Ulaanbaatar~1|Uvs~046"],["Montenegro","ME","Andrijevica~01|Bar~02|Berane~03|Bijelo Polje~04|Budva~05|Cetinje~06|Danilovgrad~07|Gusinje~22|Herceg Novi~08|Kola\u0161in~09|Kotor~10|Mojkovac~11|Nik\u0161i\u0107~12|Petnica~23|Plav~13|Plu\u017eine~14|Pljevlja~15|Podgorica~16|Ro\u017eaje~17|\u0160avnik~18|Tivat~19|Ulcinj~20|\u017dabljak~21"],["Montserrat","MS","Saint Anthony~undefined|Saint Georges~undefined|Saint Peter's~undefined"],["Morocco","MA","Chaouia-Ouardigha~09|Doukhala-Abda~10|F\xe8s-Boulemane~05|Gharb-Chrarda-Beni Hssen~02|Grand Casablanca~08|Guelmim-Es Semara~14|La\xe2youne-Boujdour-Sakia el Hamra~15|Marrakech-Tensift-Al Haouz~11|Mekn\xe8s-Tafilalet~06|Oriental~04|Oued ed Dahab-Lagouira~16|Souss-Massa-Dr\xe2a~13|Tadla-Azilal~12|Tanger-T\xe9touan~01|Taza-Al Hoceima-Taounate~03"],["Mozambique","MZ","Cabo Delgado~P|Gaza~G|Inhambane~I|Manica~B|Maputo~L|Maputo (City)~MPM|Nampula~N|Niassa~A|Sofala~S|Tete~T|Zambezia~Q"],["Myanmar","MM","Ayeyarwady~07|Bago~02|Chin~14|Kachin~11|Kayah~12|Kayin~13|Magway~03|Mandalay~04|Mon~15|Nay Pyi Taw~18|Rakhine~16|Sagaing~01|Shan~17|Tanintharyi~05|Yangon~06"],["Namibia","NA","Erongo~ER|Hardap~HA|Kavango East~KE|Kavango West~KW|Karas~KA|Khomas~KH|Kunene~KU|Ohangwena~OW|Omaheke~OH|Omusati~OS|Oshana~ON|Oshikoto~OT|Otjozondjupa~OD|Zambezi~CA"],["Nauru","NR","Aiwo~01|Anabar~02|Anetan~03|Anibare~04|Baiti~05|Boe~06|Buada~07|Denigomodu~08|Ewa~09|Ijuw~10|Meneng~11|Nibok~12|Uaboe~13|Yaren~14"],["Nepal","NP","Bagmati~BA|Bheri~BH|Dhawalagiri~DH|Gandaki~GA|Janakpur~JA|Karnali~KA|Kosi~KO|Lumbini~LU|Mahakali~MA|Mechi~ME|Narayani~NA|Rapti~RA|Sagarmatha~SA|Seti~SE"],["Netherlands","NL","Drenthe~DR|Flevoland~FL|Friesland~FR|Gelderland~GE|Groningen~GR|Limburg~LI|Noord-Brabant~NB|Noord-Holland~NH|Overijssel~OV|Utrecht~UT|Zeeland~ZE|Zuid-Holland~ZH"],["New Caledonia","NC","Iles Loyaute~undefined|Nord~undefined|Sud~undefined"],["New Zealand","NZ","Auckland~AUK|Bay of Plenty~BOP|Canterbury~CAN|Gisborne~GIS|Hawke's Bay~HKB|Marlborough~MBH|Manawatu-Wanganui~MWT|Northland~NTL|Nelson~NSN|Otago~OTA|Southland~STL|Taranaki~TKI|Tasman~TAS|Waikato~WKO|Wellington~WGN|West Coast~WTC|Chatham Islands Territory~CIT"],["Nicaragua","NI","Boaco~BO|Carazo~CA|Chinandega~CI|Chontales~CO|Estel\xed~ES|Granada~GR|Jinotega~JI|Le\xf3n~LE|Madriz~MD|Managua~MN|Masaya~MS|Matagalpa~MT|Nueva Segovia~NS|R\xedo San Juan~SJ|Rivas~RI|Atl\xe1ntico Norte~AN|Atl\xe1ntico Sur~AS"],["Niger","NE","Agadez~1|Diffa~2|Dosso~3|Maradi~4|Niamey~8|Tahoua~5|Tillab\xe9ri~6|Zinder~7"],["Nigeria","NG","Abia~AB|Abuja Federal Capital Territory~FC|Adamawa~AD|Akwa Ibom~AK|Anambra~AN|Bauchi~BA|Bayelsa~BY|Benue~BE|Borno~BO|Cross River~CR|Delta~DE|Ebonyi~EB|Edo~ED|Ekiti~EK|Enugu~EN|Gombe~GO|Imo~IM|Jigawa~JI|Kaduna~KD|Kano~KN|Katsina~KT|Kebbi~KE|Kogi~KO|Kwara~KW|Lagos~LA|Nassarawa~NA|Niger~NI|Ogun~OG|Ondo~ON|Osun~OS|Oyo~OY|Plateau~PL|Rivers~RI|Sokoto~SO|Taraba~TA|Yobe~YO|Zamfara~ZA"],["Niue","NU","Niue~undefined"],["Norfolk Island","NF","Norfolk Island~undefined"],["Northern Mariana Islands","MP","Northern Islands~undefined|Rota~undefined|Saipan~undefined|Tinian~undefined"],["Norway","NO","Akershus~02|Aust-Agder~09|Buskerud~06|Finnmark~20|Hedmark~04|Hordaland~12|M\xf8re og Romsdal~15|Nordland~18|Nord-Tr\xf8ndelag~17|Oppland~05|Oslo~03|Rogaland~11|Sogn og Fjordane~14|S\xf8r-Tr\xf8ndelag~16|Telemark~08|Troms~19|Vest-Agder~10|Vestfold~07|\xd8stfold~01|Jan Mayen~22|Svalbard~21"],["Oman","OM","Ad Dakhiliyah~DA|Al Buraymi~BU|Al Wusta~WU|Az Zahirah~ZA|Janub al Batinah~BS|Janub ash Sharqiyah~SS|Masqat~MA|Musandam~MU|Shamal al Batinah~BJ|Shamal ash Sharqiyah~SJ|Zufar~ZU"],["Pakistan","PK","\u0100z\u0101d Kashm\u012br~JK|Bal\u014dchist\u0101n~BA|Gilgit-Baltist\u0101n~GB|Isl\u0101m\u0101b\u0101d~IS|Kha\u012bbar Pakht\u016bnkhw\u0101s~KP|Punj\u0101b~PB|Sindh~SD|Federally Administered Tribal Areas~TA"],["Palau","PW","Aimeliik~002|Airai~004|Angaur~010|Hatobohei~050|Kayangel~100|Koror~150|Melekeok~212|Ngaraard~214|Ngarchelong~218|Ngardmau~222|Ngatpang~224|Ngchesar~226|Ngeremlengui~227|Ngiwal~228|Peleliu~350|Sonsoral~350"],["Palestine, State of","PS","Ak Khal\u012bl~HBN|Al Quds~JEM|Ar\u012b\u1e29\u0101 wal Aghw\u0101r~JRH|Bayt La\u1e29m~BTH|Dayr al Bala\u1e29~DEB|Ghazzah~GZA|Jan\u012bn~JEN|Kh\u0101n Y\u016bnis~KYS|N\u0101blus~NBS|Qalq\u012byah~QQA|Rafa\u1e29~RFH|R\u0101m All\u0101h wal B\u012brah~RBH|Salf\u012bt~SLT|Sham\u0101l Ghazzah~NGZ|\u0162\u016bb\u0101s~TBS|\u0162\u016blkarm~TKM"],["Panama","PA","Bocas del Toro~1|Chiriqu\xed~4|Cocl\xe9~2|Col\xf3n~3|Dari\xe9n~5|Ember\xe1~EM|Herrera~6|Kuna Yala~KY|Los Santos~7|Ng\xe4be-Bugl\xe9~NB|Panam\xe1~8|Panam\xe1 Oeste~10|Veraguas~9"],["Papua New Guinea","PG","Bougainville~NSB|Central~CPM|Chimbu~CPK|East New Britain~EBR|East Sepik~ESW|Eastern Highlands~EHG|Enga~EPW|Gulf~GPK|Hela~HLA|Jiwaka~JWK|Madang~MOM|Manus~MRL|Milne Bay~MBA|Morobe~MPL|Port Moresby~NCD|New Ireland~NIK|Northern~NPP|Southern Highlands~SHM|West New Britain~WBK|West Sepik~SAN|Western~WPD|Western Highlands~WHM"],["Paraguay","PY","Alto Paraguay~16|Alto Parana~10|Amambay~13|Asuncion~ASU|Caaguazu~5|Caazapa~6|Canindeyu~14|Central~11|Concepcion~1|Cordillera~3|Guaira~4|Itapua~7|Misiones~8|Neembucu~12|Paraguari~9|Presidente Hayes~15|San Pedro~2"],["Peru","PE","Amazonas~AMA|Ancash~ANC|Apurimac~APU|Arequipa~ARE|Ayacucho~AYA|Cajamarca~CAJ|Callao~CAL|Cusco~CUS|Huancavelica~HUV|Huanuco~HUC|Ica~ICA|Junin~JUN|La Libertad~LAL|Lambayeque~LAM|Lima~LIM|Loreto~LOR|Madre de Dios~MDD|Moquegua~MOQ|Municipalidad Metropolitana de Lima~LMA|Pasco~PAS|Piura~PIU|Puno~PUN|San Martin~SAM|Tacna~TAC|Tumbes~TUM|Ucayali~UCA"],["Philippines","PH","Abra~ABR|Agusan del Norte~AGN|Agusan del Sur~AGS|Aklan~AKL|Albay~ALB|Antique~ANT|Apayao~APA|Aurora~AUR|Basilan~BAS|Bataan~BAN|Batanes~BTN|Batangas~BTG|Benguet~BEN|Biliran~BIL|Bohol~BOH|Bukidnon~BUK|Bulacan~BUL|Cagayan~CAG|Camarines Norte~CAN|Camarines Sur~CAS|Camiguin~CAM|Capiz~CAP|Catanduanes~CAT|Cavite~CAV|Cebu~CEB|Compostela~COM|Cotabato~NCO|Davao del Norte~DAV|Davao del Sur~DAS|Davao Occidental~DVO|Davao Oriental~DAO|Dinagat Islands~DIN|Eastern Samar~EAS|Guimaras~GUI|Ifugao~IFU|Ilocos Norte~ILN|Ilocos Sur~ILS|Iloilo~ILI|Isabela~ISA|Kalinga~KAL|La Union~LUN|Laguna~LAG|Lanao del Norte~LAN|Lanao del Sur~LAS|Leyte~LEY|Maguindanao~MAG|Masbate~MAS|Metro Manila~00|Mindoro Occidental~MDC|Mindoro Oriental~MDR|Misamis Occidental~MSC|Misamis Oriental~MSR|Mountain Province~MOU|Negros Occidental~NEC|Negros Oriental~NER|Northern Samar~NSA|Nueva Ecija~NUE|Nueva Vizcaya~NUV|Palawan~PLW|Pampanga~PAM|Pangasinan~PAN|Quezon~QUE|Quirino~QUI|Rizal~RIZ|Romblon~ROM|Samar~WSA|Sarangani~SAR|Siquijor~SIG|Sorsogon~SOR|Southern Leyte~SLE|Sultan Kudarat~AUK|Sulu~SLU|Surigao del Norte~SUN|Surigao del Sur~SUR|Tarlac~TAR|Tawi-Tawi~TAW|Zambales~ZMB|Zamboanga del Norte~ZAN|Zamboanga del Sur~ZAS|Zamboanga Sibugay~ZSI"],["Pitcairn","PN","Pitcairn Islands~undefined"],["Poland","PL","Dolno\u015bl\u0105skie~DS|Kujawsko-pomorskie~KP|\u0141\xf3dzkie~LD|Lubelskie~LU|Lubuskie~LB|Malopolskie~MA|Mazowieckie~MZ|Opolskie~OP|Podkarpackie~PK|Podlaskie~PD|Pomorskie~PM|\u015al\u0105skie~SL|\u015awi\u0119tokrzyskie~SK|Warmi\u0144sko-mazurskie~WN|Wielkopolskie~WP|Zachodniopomorskie~ZP"],["Portugal","PT","Acores~20|Aveiro~01|Beja~02|Braga~03|Braganca~04|Castelo Branco~05|Coimbra~06|Evora~07|Faro~08|Guarda~09|Leiria~10|Lisboa~11|Madeira~30|Portalegre~12|Porto~13|Santarem~14|Setubal~15|Viana do Castelo~16|Vila Real~17|Viseu~18"],["Puerto Rico","PR","Adjuntas~undefined|Aguada~undefined|Aguadilla~undefined|Aguas Buenas~undefined|Aibonito~undefined|Anasco~undefined|Arecibo~undefined|Arroyo~undefined|Barceloneta~undefined|Barranquitas~undefined|Bayamon~undefined|Cabo Rojo~undefined|Caguas~undefined|Camuy~undefined|Canovanas~undefined|Carolina~undefined|Cat~undefined|Ceiba~undefined|Ciales~undefined|Cidra~undefined|Coamo~undefined|Comerio~undefined|Corozal~undefined|Culebra~undefined|Dorado~undefined|Fajardo~undefined|Florida~undefined|Guanica~undefined|Guayama~undefined|Guayanilla~undefined|Guaynabo~undefined|Gurabo~undefined|Hatillo~undefined|Hormigueros~undefined|Humacao~undefined|Isabe~undefined|Juana Diaz~undefined|Juncos~undefined|Lajas~undefined|Lares~undefined|Las Marias~undefined|Las oiza~undefined|Luquillo~undefined|Manati~undefined|Maricao~undefined|Maunabo~undefined|Mayaguez~undefined|Moca~undefined|Morovis~undefined|Naguabo~undefined|Naranjito~undefined|Orocovis~undefined|Patillas~undefined|Penuelas~undefined|Ponce~undefined|Quebradillas~undefined|Rincon~undefined|Rio Grande~undefined|Sabana linas~undefined|San German~undefined|San Juan~undefined|San Lorenzo~undefined|San Sebastian~undefined|Santa Isabel~undefined|Toa Alta~undefined|Toa Baja~undefined|Trujillo Alto~undefined|Utuado~undefined|Vega Alta~undefined|Vega ues~undefined|Villalba~undefined|Yabucoa~undefined|Yauco~undefined"],["Qatar","QA","Ad Daw\u1e29ah~DA|Al Khawr wa adh Dhakh\u012brah~KH|Al Wakrah~WA|Ar Rayy\u0101n~RA|Ash Sham\u0101l~MS|Az\u0327 Za\u0327`\u0101yin~ZA|Umm \u015eal\u0101l~US"],["R\xe9union","RE","R\xe9union~undefined"],["Romania","RO","Alba~AB|Arad~AR|Arges~AG|Bacau~BC|Bihor~BH|Bistrita-Nasaud~BN|Botosani~BT|Braila~BR|Brasov~BV|Bucuresti~B|Buzau~BZ|Calarasi~CL|Caras-Severin~CS|Cluj~CJ|Constanta~CT|Covasna~CV|Dambovita~DB|Dolj~DJ|Galati~GL|Giurgiu~GR|Gorj~GJ|Harghita~HR|Hunedoara~HD|Ialomita~IL|Iasi~IS|Maramures~MM|Mehedinti~MH|Mures~MS|Neamt~NT|Olt~OT|Prahova~PH|Salaj~SJ|Satu Mare~SM|Sibiu~SB|Suceava~SV|Teleorman~TR|Timis~TM|Tulcea~TL|Valcea~VL|Vaslui~VS|Vrancea~VN"],["Russian Federation","RU","Republic of Adygea~AD|Republic of Altai (Gorno-Altaysk)~AL|Altai Krai~ALT|Amur Oblast~AMU|Arkhangelsk Oblast~ARK|Astrakhan Oblast~AST|Republic of Bashkortostan~BA|Belgorod Oblast~BEL|Bryansk Oblast~BRY|Republic of Buryatia~BU|Chechen Republic~CE|Chelyabinsk Oblast~CHE|Chukotka Autonomous Okrug~CHU|Chuvash Republic~CU|Republic of Dagestan~DA|Republic of Ingushetia~IN|Irkutsk Oblast~IRK|Ivanovo Oblast~IVA|Jewish Autonomous Oblast~JEW|Kabardino-Balkar Republic~KB|Kaliningrad Oblast~KLN|Republic of Kalmykia~KL|Kaluga Oblast~KLU|Kamchatka Krai~KAM|Karachay-Cherkess Republic~KC|Republic of Karelia~KR|Khabarovsk Krai~KHA|Republic of Khakassia~KK|Khanty-Mansi Autonomous Okrug - Yugra~KHM|Kemerovo Oblast~KEM|Kirov Oblast~KIR|Komi Republic~KO|Kostroma Oblast~KOS|Krasnodar Krai~KDA|Krasnoyarsk Krai~KYA|Kurgan Oblast~KGN|Kursk Oblast~KRS|Leningrad Oblast~LEN|Lipetsk Oblast~LIP|Magadan Oblast~MAG|Mari El Republic~ME|Republic of Mordovia~MO|Moscow Oblast~MOS|Moscow~MOW|Murmansk Oblast~MU|Nenets Autonomous Okrug~NEN|Nizhny Novgorod Oblast~NIZ|Novgorod Oblast~NGR|Novosibirsk Oblast~NVS|Omsk Oblast~OMS|Orenburg Oblast~ORE|Oryol Oblast~ORL|Penza Oblast~PNZ|Perm Krai~PER|Primorsky Krai~PRI|Pskov Oblast~PSK|Rostov Oblast~ROS|Ryazan Oblast~RYA|Saint Petersburg~SPE|Sakha (Yakutia) Republic~SA|Sakhalin Oblast~SAK|Samara Oblast~SAM|Saratov Oblast~SAR|Republic of North Ossetia-Alania~NOA|Smolensk Oblast~SMO|Stavropol Krai~STA|Sverdlovsk Oblast~SVE|Tambov Oblast~TAM|Republic of Tatarstan~TA|Tomsk Oblast~TOM|Tuva Republic~TU|Tula Oblast~TUL|Tver Oblast~TVE|Tyumen Oblast~TYU|Udmurt Republic~UD|Ulyanovsk Oblast~ULY|Vladimir Oblast~VLA|Volgograd Oblast~VGG|Vologda Oblast~VLG|Voronezh Oblast~VOR|Yamalo-Nenets Autonomous Okrug~YAN|Yaroslavl Oblast~YAR|Zabaykalsky Krai~ZAB"],["Rwanda","RW","Kigali~01|Eastern~02|Northern~03|Western~04|Southern~05"],["Saint Barth\xe9lemy","BL","Au Vent~02|Sous le Vent~01"],["Saint Helena, Ascension and Tristan da Cunha","SH","Ascension~AC|Saint Helena~HL|Tristan da Cunha~TA"],["Saint Kitts and Nevis","KN","Saint Kitts~K|Nevis~N"],["Saint Lucia","LC","Anse-la-Raye~01|Canaries~12|Castries~02|Choiseul~03|Dennery~05|Gros Islet~06|Laborie~07|Micoud~08|Soufriere~10|Vieux Fort~11"],["Saint Martin","MF","Saint Martin~undefined"],["Saint Pierre and Miquelon","PM","Miquelon~undefined|Saint Pierre~undefined"],["Saint Vincent and the Grenadines","VC","Charlotte~01|Grenadines~06|Saint Andrew~02|Saint David~03|Saint George~04|Saint Patrick~05"],["Samoa","WS","A'ana~AA|Aiga-i-le-Tai~AL|Atua~AT|Fa'asaleleaga~FA|Gaga'emauga~GE|Gagaifomauga~GI|Palauli~PA|Satupa'itea~SA|Tuamasaga~TU|Va'a-o-Fonoti~VF|Vaisigano~VS"],["San Marino","SM","Acquaviva~01|Borgo Maggiore~06|Chiesanuova~02|Domagnano~03|Faetano~04|Fiorentino~05|Montegiardino~08|San Marino~07|Serravalle~09"],["Sao Tome and Principe","ST","Principe~P|Sao Tome~S"],["Saudi Arabia","SA","'Asir~14|Al Bahah~11|Al Hudud ash Shamaliyah~08|Al Jawf~12|Al Madinah al Munawwarah~03|Al Qasim~05|Ar Riyad~01|Ash Sharqiyah~04|Ha'il~06|Jazan~09|Makkah al Mukarramah~02|Najran~10|Tabuk~07"],["Senegal","SN","Dakar~DK|Diourbel~DB|Fatick~FK|Kaffrine~KA|Kaolack~KL|Kedougou~KE|Kolda~KD|Louga~LG|Matam~MT|Saint-Louis~SL|Sedhiou~SE|Tambacounda~TC|Thies~TH|Ziguinchor~ZG"],["Serbia","RS","Beograd (Belgrade)~00|Borski~14|Brani\u010devski~11|Jablani\u010dki~23|Ju\u017enoba\u010dki~06|Ju\u017enobanatski~04|Kolubarski~09|Kosovski~25|Kosovsko-Mitrova\u010dki~28|Kosovsko-Pomoravski~29|Ma\u010dvanski~08|Moravi\u010dki~17|Ni\u0161avski~20|P\u010dinjski~24|Pe\u0107ki~26|Pirotski~22|Podunavski~10|Pomoravski~13|Prizrenski~27|Rasinski~19|Ra\u0161ki~18|Severnoba\u010dki~01|Severnobanatski~03|Srednjebanatski~02|Sremski~07|\u0160umadijski~12|Topli\u010dki~21|Zaje\u010darski~15|Zapadnoba\u010dki~05|Zlatiborski~16"],["Seychelles","SC","Anse aux Pins~01|Anse Boileau~02|Anse Etoile~03|Anse Royale~05|Anu Cap~04|Baie Lazare~06|Baie Sainte Anne~07|Beau Vallon~08|Bel Air~09|Bel Ombre~10|Cascade~11|Glacis~12|Grand'Anse Mahe~13|Grand'Anse Praslin~14|La Digue~15|La Riviere Anglaise~16|Les Mamelles~24|Mont Buxton~17|Mont Fleuri~18|Plaisance~19|Pointe La Rue~20|Port Glaud~21|Roche Caiman~25|Saint Louis~22|Takamaka~23"],["Sierra Leone","SL","Eastern~E|Northern~N|Southern~S|Western~W"],["Singapore","SG","Central Singapore~01|North East~02|North West~03|South East~04|South West~05"],["Sint Maarten (Dutch part)","SX","Sint Maarten~undefined"],["Slovakia","SK","Banskobystricky~BC|Bratislavsky~BL|Kosicky~KI|Nitriansky~NI|Presovsky~PV|Trenciansky~TC|Trnavsky~TA|Zilinsky~ZI"],["Slovenia","SI","Ajdovscina~001|Apace~195|Beltinci~002|Benedikt~148|Bistrica ob Sotli~149|Bled~003|Bloke~150|Bohinj~004|Borovnica~005|Bovec~006|Braslovce~151|Brda~007|Brezice~009|Brezovica~008|Cankova~152|Celje~011|Cerklje na Gorenjskem~012|Cerknica~013|Cerkno~014|Cerkvenjak~153|Cirkulane~196|Crensovci~015|Crna na Koroskem~016|Crnomelj~017|Destrnik~018|Divaca~019|Dobje~154|Dobrepolje~020|Dobrna~155|Dobrova-Polhov Gradec~021|Dobrovnik~156|Dol pri Ljubljani~022|Dolenjske Toplice~157|Domzale~023|Dornava~024|Dravograd~025|Duplek~026|Gorenja Vas-Poljane~027|Gorisnica~028|Gorje~207|Gornja Radgona~029|Gornji Grad~030|Gornji Petrovci~031|Grad~158|Grosuplje~032|Hajdina~159|Hoce-Slivnica~160|Hodos~161|Horjul~162|Hrastnik~034|Hrpelje-Kozina~035|Idrija~036|Ig~037|Ilirska Bistrica~038|Ivancna Gorica~039|Izola~040s|Jesenice~041|Jursinci~042|Kamnik~043|Kanal~044|Kidricevo~045|Kobarid~046|Kobilje~047|Kocevje~048|Komen~049|Komenda~164|Koper~050|Kodanjevica na Krki~197|Kostel~165|Kozje~051|Kranj~052|Kranjska Gora~053|Krizevci~166|Krsko~054|Kungota~055|Kuzma~056|Lasko~057|Lenart~058|Lendava~059|Litija~068|Ljubljana~061|Ljubno~062|Ljutomer~063|Log-Dragomer~208|Logatec~064|Loska Dolina~065|Loski Potok~066|Lovrenc na Pohorju~167|Lukovica~068|Luce~067|Majsperk~069|Makole~198|Maribor~070|Markovci~168|Medvode~071|Menges~072|Metlika~073|Mezica~074|Miklavz na Dravskem Polju~169|Miren-Kostanjevica~075|Mirna~212|Mirna Pec~170|Mislinja~076|Mokronog-Trebelno~199|Moravce~077|Moravske Toplice~078|Mozirje~079|Murska Sobota~080|Naklo~082|Nazarje~083|Nova Gorica~084|Novo Mesto~085|Odranci~086|Ormoz~087|Osilnica~088|Pesnica~089|Piran~090|Pivka~091|Podcetrtek~092|Podlehnik~172|Podvelka~093|Poljcane~200|Postojna~094|Prebold~174|Preddvor~095|Prevalje~175|Ptuj~096|Race-Fram~098|Radece~099|Radenci~100|Radlje ob Dravi~101|Radovljica~102|Ravne na Koroskem~103|Razkrizje~176|Recica ob Savinji~209|Rence-Vogrsko~201|Ribnica~104|Ribnica na Poboriu~177|Rogaska Slatina~106|Rogasovci~105|Rogatec~107|Ruse~108|Salovci~033|Selnica ob Dravi~178|Semic~109|Sempeter-Vrtojba~183|Sencur~117|Sentilj~118|Sentjernej~119|Sentjur~120|Sentrupert~211|Sevnica~110|Sezana~111|Skocjan~121|Skofja Loka~122|Skofljica~123|Slovenj Gradec~112|Slovenska Bistrica~113|Slovenske Konjice~114|Smarje pri elsah~124|Smarjeske Toplice~206|Smartno ob Paki~125|Smartno pri Litiji~194|Sodrazica~179|Solcava~180|Sostanj~126|Sredisce ob Dravi~202|Starse~115|Store~127|Straza~203|Sveta Ana~181|Sveta Trojica v Slovenskih Goricah~204|Sveta Andraz v Slovenskih Goricah~182|Sveti Jurij~116|Sveti Jurij v Slovenskih Goricah~210|Sveti Tomaz~205|Tabor~184|Tisina~128|Tolmin~128|Trbovlje~129|Trebnje~130|Trnovska Vas~185|Trzin~186|Trzic~131|Turnisce~132|Velenje~133|Velika Polana~187|Velike Lasce~134|Verzej~188|Videm~135|Vipava~136|Vitanje~137|Vodice~138|Vojnik~139|Vransko~189|Vrhnika~140|Vuzenica~141|Zagorje ob Savi~142|Zavrc~143|Zrece~144|Zalec~190|Zelezniki~146|Zetale~191|Ziri~147|Zirovnica~192|Zuzemberk~193"],["Solomon Islands","SB","Central~CE|Choiseul~CH|Guadalcanal~GU|Honiara~CT|Isabel~IS|Makira-Ulawa~MK|Malaita~ML|Rennell and Bellona~RB|Temotu~TE|Western~WE"],["Somalia","SO","Awdal~AW|Bakool~BK|Banaadir~BN|Bari~BR|Bay~BY|Galguduud~GA|Gedo~GE|Hiiraan~HI|Jubbada Dhexe~JD|Jubbada Hoose~JH|Mudug~MU|Nugaal~NU|Sanaag~SA|Shabeellaha Dhexe~SD|Shabeellaha Hoose~SH|Sool~SO|Togdheer~TO|Woqooyi Galbeed~WO"],["South Africa","ZA","Eastern Cape~EC|Free State~FS|Gauteng~GT|KwaZulu-Natal~NL|Limpopo~LP|Mpumalanga~MP|Northern Cape~NC|North West~NW|Western Cape~WC"],["South Georgia and South Sandwich Islands","GS","Bird Island~undefined|Bristol Island~undefined|Clerke Rocks~undefined|Montagu Island~undefined|Saunders Island~undefined|South Georgia~undefined|Southern Thule~undefined|Traversay Islands~undefined"],["South Sudan","SS","Central Equatoria~CE|Eastern Equatoria~EE|Jonglei~JG|Lakes~LK|Northern Bahr el Ghazal~BN|Unity~UY|Upper Nile~NU|Warrap~WR|Western Bahr el Ghazal~BW|Western Equatoria~EW"],["Spain","ES","Albacete~CM|Alicante~VC|Almer\xeda~AN|Araba/\xc1lava~VI|Asturias~O|\xc1vila~AV|Badajoz~BA|Barcelona~B|Bizkaia~BI|Burgos~BU|C\xe1ceres~CC|C\xe1diz~CA|Cantabria~S|Castell\xf3n~CS|Cueta~CU|Ciudad Real~CR|C\xf3rdoba~CO|A Coru\xf1a~C|Cuenca~CU|Gipuzkoa~SS|Girona~GI|Granada~GR|Guadalajara~GU|Huelva~H|Huesca~HU|Illes Balears~PM|Ja\xe9n~J|Le\xf3n~LE|Lleida~L|Lugo~LU|Madrid~M|M\xe1laga~MA|Melilla~ML|Murcia~MU|Navarre~NA|Ourense~OR|Palencia~P|Las Palmas~GC|Pontevedra~PO|La Rioja~LO|Salamanca~SA|Santa Cruz de Tenerife~TF|Segovia~SG|Sevilla~SE|Soria~SO|Tarragona~T|Teruel~TE|Toledo~TO|Valencia~V|Valladolid~VA|Zamora~ZA|Zaragoza~Z"],["Sri Lanka","LK","Basnahira~1|Dakunu~3|Madhyama~2|Naegenahira~5|Sabaragamuwa~9|Uturu~4|Uturumaeda~7|Vayamba~6|Uva~8"],["Sudan","SD","Al Bahr al Ahmar~RS|Al Jazirah~GZ|Al Khartum~KH|Al Qadarif~GD|An Nil al Abyad~NW|An Nil al Azraq~NB|Ash Shamaliyah~NO|Gharb Darfur~DW|Gharb Kurdufan~GK|Janub Darfur~DS|Janub Kurdufan~KS|Kassala~KA|Nahr an Nil~NR|Shamal Darfur~DN|Sharq Darfur~DE|Shiamal Kurdufan~KN|Sinnar~SI|Wasat Darfur Zalinjay~DC"],["Suriname","SR","Brokopondo~BR|Commewijne~CM|Coronie~CR|Marowijne~MA|Nickerie~NI|Para~PR|Paramaribo~PM|Saramacca~SA|Sipaliwini~SI|Wanica~WA"],["Swaziland","SZ","Hhohho~HH|Lubombo~LU|Manzini~MA|Shiselweni~SH"],["Sweden","SE","Blekinge~K|Dalarnas~W|Gotlands~X|Gavleborgs~I|Hallands~N|Jamtlands~Z|Jonkopings~F|Kalmar~H|Kronobergs~G|Norrbottens~BD|Orebro~T|Ostergotlands~E|Skane~M|Sodermanlands~D|Stockholm~AB|Varmlands~S|Vasterbottens~AC|Vasternorrlands~Y|Vastmanlands~U|Vastra Gotalands~O"],["Switzerland","CH","Aargau~AG|Appenzell Ausserrhoden~AR|Appenzell Innerhoden~AI|Basel-Landschaft~BL|Basel-Stadt~BS|Bern~BE|Fribourg~FR|Gen\xe8ve~GE|Glarus~GL|Graub\xfcnden~GR|Jura~JU|Luzern~LU|Neuch\xe2tel~NE|Nidwalden~NW|Obwalden~OW|Sankt Gallen~SG|Schaffhausen~SH|Schwyz~SZ|Solothurn~SO|Thurgau~TG|Ticino~TI|Uri~UR|Valais~VS|Vaud~VD|Zug~ZG|Z\xfcrich~ZH"],["Syrian Arab Republic","SY","Al Hasakah~HA|Al Ladhiqiyah~LA|Al Qunaytirah~QU|Ar Raqqah~RA|As Suwayda'~SU|Dar'a~DR|Dayr az Zawr~DY|Dimashq~DI|Halab~HL|Hamah~HM|Hims~HI|Idlib~ID|Rif Dimashq~RD|Tartus~TA"],["Taiwan","TW","Chang-hua~CHA|Chia-i~CYQ|Hsin-chu~HSQ|Hua-lien~HUA|Kao-hsiung~KHH|Keelung~KEE|Kinmen~KIN|Lienchiang~LIE|Miao-li~MIA|Nan-t'ou~NAN|P'eng-hu~PEN|New Taipei~NWT|P'ing-chung~PIF|T'ai-chung~TXG|T'ai-nan~TNN|T'ai-pei~TPE|T'ai-tung~TTT|T'ao-yuan~TAO|Yi-lan~ILA|Yun-lin~YUN"],["Tajikistan","TJ","Dushanbe~DU|K\u016dhistoni Badakhshon~GB|Khatlon~KT|Sughd~SU"],["Tanzania, United Republic of","TZ","Arusha~01|Coast~19|Dar es Salaam~02|Dodoma~03|Iringa~04|Kagera~05|Kigoma~08|Kilimanjaro~09|Lindi~12|Manyara~26|Mara~13|Mbeya~14|Morogoro~16|Mtwara~17|Mwanza~18|Pemba North~06|Pemba South~10|Rukwa~20|Ruvuma~21|Shinyanga~22|Singida~23|Tabora~24|Tanga~25|Zanzibar North~07|Zanzibar Central/South~11|Zanzibar Urban/West~15"],["Thailand","TH","Amnat Charoen~37|Ang Thong~15|Bueng Kan~38|Buri Ram~31|Chachoengsao~24|Chai Nat~18|Chaiyaphum~36|Chanthaburi~22|Chiang Mai~50|Chiang Rai~57|Chon Buri~20|Chumphon~86|Kalasin~46|Kamphaeng Phet~62|Kanchanaburi~71|Khon Kaen~40|Krabi~81|Krung Thep Mahanakhon (Bangkok)~10|Lampang~52|Lamphun~51|Loei~42|Lop Buri~16|Mae Hong Son~58|Maha Sarakham~44|Mukdahan~49|Nakhon Nayok~26|Nakhon Phathom~73|Nakhon Phanom~48|Nakhon Ratchasima~30|Nakhon Sawan~60|Nakhon Si Thammarat~80|Nan~55|Narathiwat~96|Nong Bua Lam Phu~39|Nong Khai~43|Nonthaburi~12|Pathum Thani~13|Pattani~94|Phangnga~82|Phatthalung~93|Phayao~56|Phetchabun~76|Phetchaburi~76|Phichit~66|Phitsanulok~65|Phra Nakhon Si Ayutthaya~14|Phrae~54|Phuket~83|Prachin Buri~25|Prachuap Khiri Khan~77|Ranong~85|Ratchaburi~70|Rayong~21|Roi Et~45|Sa Kaeo~27|Sakon Nakhon~47|Samut Prakan~11|Samut Sakhon~74|Samut Songkhram~75|Saraburi~19|Satun~91|Sing Buri~17|Si Sa ket~33|Songkhla~90|Sukhothai~64|Suphan Buri~72|Surat Thani~84|Surin~32|Tak~63|Trang~92|Trat~23|Ubon Ratchathani~34|Udon Thani~41|Uthai Thani~61|Uttaradit~53|Yala~95|Yasothon~35"],["Timor-Leste","TL","Aileu~AL|Ainaro~AN|Baucau~BA|Bobonaro~BO|Cova Lima~CO|Dili~DI|Ermera~ER|Lautem~LA|Liquica~LI|Manatuto~MT|Manufahi~MF|Oecussi~OE|Viqueque~VI"],["Togo","TG","Centre~C|Kara~K|Maritime~M|Plateaux~P|Savannes~S"],["Tokelau","TK","Atafu~undefined|Fakaofo~undefined|Nukunonu~undefined"],["Tonga","TO","'Eua~01|Ha'apai~02|Niuas~03|Tongatapu~04|Vava'u~05"],["Trinidad and Tobago","TT","Arima~ARI|Chaguanas~CHA|Couva-Tabaquite-Talparo~CTT|Diefo Martin~DMN|Mayaro-Rio Claro~MRC|Penal-Debe~PED|Point Fortin~PTF|Port-of-Spain~POS|Princes Town~PRT|San Fernando~SFO|San Juan-Laventille~SJL|Sangre Grande~SGE|Siparia~SIP|Tobago~TOB|Tunapuna-Piarco~TUP"],["Tunisia","TN","Ariana~12|Beja~31|Ben Arous~13|Bizerte~23|Gabes~81|Gafsa~71|Jendouba~32|Kairouan~41|Kasserine~42|Kebili~73|Kef~33|Mahdia~53|Medenine~82|Monastir~52|Nabeul~21|Sfax~61|Sidi Bouzid~43|Siliana~34|Sousse~51|Tataouine~83|Tozeur~72|Tunis~11|Zaghouan~22"],["Turkey","TR","Adana~01|Adiyaman~02|Afyonkarahisar~03|Agri~04|Aksaray~68|Amasya~05|Ankara~06|Antalya~07|Ardahan~75|Artvin~08|Aydin~09|Balikesir~10|Bartin~74|Batman~72|Bayburt~69|Bilecik~11|Bingol~12|Bitlis~13|Bolu~14|Burdur~15|Bursa~16|Canakkale~17|Cankiri~18|Corum~19|Denizli~20|Diyarbakir~21|Duzce~81|Edirne~22|Elazig~23|Erzincan~24|Erzurum~25|Eskisehir~26|Gaziantep~27|Giresun~28|Gumushane~29|Hakkari~30|Hatay~31|Igdir~76|Isparta~32|Istanbul~34|Izmir~35|Kahramanmaras~46|Karabuk~78|Karaman~70|Kars~36|Kastamonu~37|Kayseri~38|Kilis~79|Kirikkale~71|Kirklareli~39|Kirsehir~40|Kocaeli~41|Konya~42|Kutahya~43|Malatya~44|Manisa~45|Mardin~47|Mersin~33|Mugla~48|Mus~49|Nevsehir~50|Nigde~51|Ordu~52|Osmaniye~80|Rize~53|Sakarya~54|Samsun~55|Sanliurfa~63|Siirt~56|Sinop~57|Sirnak~73|Sivas~58|Tekirdag~59|Tokat~60|Trabzon~61|Tunceli~62|Usak~64|Van~65|Yalova~77|Yozgat~66|Zonguldak~67"],["Turkmenistan","TM","Ahal~A|Asgabat~S|Balkan~B|Dashoguz~D|Lebap~L|Mary~M"],["Turks and Caicos Islands","TC","Turks and Caicos Islands~undefined"],["Tuvalu","TV","Funafuti~FUN|Nanumanga~NMG|Nanumea~NMA|Niutao~NIT|Nui~NUI|Nukufetau~NKF|Nukulaelae~NKL|Vaitupu~VAU"],["Uganda","UG","Abim~317|Adjumani~301|Amolatar~314|Amuria~216|Amuru~319|Apac~302|Arua~303|Budaka~217|Bududa~223|Bugiri~201|Bukedea~224|Bukwa~218|Buliisa~419|Bundibugyo~401|Bushenyi~402|Busia~202|Butaleja~219|Dokolo~318|Gulu~304|Hoima~403|Ibanda~416|Iganga~203|Isingiro~417|Jinja~204|Kaabong~315|Kabale~404|Kabarole~405|Kaberamaido~213|Kalangala~101|Kaliro~220|Kampala~102|Kamuli~205|Kamwenge~413|Kanungu~414|Kapchorwa~206|Kasese~406|Katakwi~207|Kayunga~112|Kibaale~407|Kiboga~103|Kiruhura~418|Kisoro~408|Kitgum~305|Koboko~316|Kotido~306|Kumi~208|Kyenjojo~415|Lira~307|Luwero~104|Lyantonde~116|Manafwa~221|Maracha~320|Masaka~105|Masindi~409|Mayuge~214|Mbale~209|Mbarara~410|Mityana~114|Moroto~308|Moyo~309|Mpigi~106|Mubende~107|Mukono~108|Nakapiripirit~311|Nakaseke~115|Nakasongola~109|Namutumba~222|Nebbi~310|Ntungamo~411|Oyam~321|Pader~312|Pallisa~210|Rakai~110|Rukungiri~412|Sembabule~111|Sironko~215|Soroti~211|Tororo~212|Wakiso~113|Yumbe~313"],["Ukraine","UA","Cherkasy~71|Chernihiv~74|Chernivtsi~77|Dnipropetrovsk~12|Donetsk~14|Ivano-Frankivsk~26|Kharkiv~63|Kherson~65|Khmelnytskyi~68|Kiev~32|Kirovohrad~35|Luhansk~09|Lviv~46|Mykolaiv~48|Odessa~51|Poltava~53|Rivne~56|Sumy~59|Ternopil~61|Vinnytsia~05|Volyn~07|Zakarpattia~21|Zaporizhia~23|Zhytomyr~18|Avtonomna Respublika Krym~43|Ky\xefv~30|Sevastopol~40"],["United Arab Emirates","AE","Abu Dhabi~AZ|Ajman~AJ|Dubai~DU|Fujairah~FU|Ras al Khaimah~RK|Sharjah~SH|Umm Al Quwain~UQ"],["United Kingdom","GB","Avon~AVN|Bedfordshire~BDF|Berkshire~BRK|Bristol, City of~COB|Buckinghamshire~BKM|Cambridgeshire~CAM|Cheshire~CHS|Cleveland~CLV|Cornwall~CON|Cumbria~CMA|Derbyshire~DBY|Devon~DEV|Dorset~DOR|Durham~DUR|East Sussex~SXE|Essex~ESS|Gloucestershire~GLS|Greater London~LND|Greater Manchester~GTM|Hampshire~HAM|Hereford and Worcester~HWR|Herefordshire~HEF|Hertfordshire~HRT|Isle of Wight~IOW|Kent~KEN|Lancashire~LAN|Leicestershire~LEI|Lincolnshire~LIN|London~LDN|Merseyside~MSY|Middlesex~MDX|Norfolk~NFK|Northamptonshire~NTH|Northumberland~NBL|North Humberside~NHM|North Yorkshire~NYK|Nottinghamshire~NTT|Oxfordshire~OXF|Rutland~RUT|Shropshire~SAL|Somerset~SOM|South Humberside~SHM|South Yorkshire~SYK|Staffordshire~STS|Suffolk~SFK|Surrey~SRY|Tyne and Wear~TWR|Warwickshire~WAR|West Midlands~WMD|West Sussex~SXW|West Yorkshire~WYK|Wiltshire~WIL|Worcestershire~WOR|Antrim~ANT|Armagh~ARM|Belfast, City of~BLF|Down~DOW|Fermanagh~FER|Londonderry~LDY|Derry, City of~DRY|Tyrone~TYR|Aberdeen, City of~AN|Aberdeenshire~ABD|Angus (Forfarshire)~ANS|Argyll~AGB|Ayrshire~ARG|Banffshire~BAN|Berwickshire~BEW|Bute~BUT|Caithness~CAI|Clackmannanshire~CLK|Cromartyshire~COC|Dumfriesshire~DFS|Dunbartonshire (Dumbarton)~DNB|Dundee, City of~DD|East Lothian (Haddingtonshire)~ELN|Edinburgh, City of~EB|Fife~FIF|Glasgow, City of~GLA|Inverness-shire~INV|Kincardineshire~KCD|Kinross-shire~KRS|Kirkcudbrightshire~KKD|Lanarkshire~LKS|Midlothian (County of Edinburgh)~MLN|Moray (Elginshire)~MOR|Nairnshire~NAI|Orkney~OKI|Peeblesshire~PEE|Perthshire~PER|Renfrewshire~RFW|Ross and Cromarty~ROC|Ross-shire~ROS|Roxburghshire~ROX|Selkirkshire~SEL|Shetland (Zetland)~SHI|Stirlingshire~STI|Sutherland~SUT|West Lothian (Linlithgowshire)~WLN|Wigtownshire~WIG|Clwyd~CWD|Dyfed~DFD|Gwent~GNT|Gwynedd~GWN|Mid Glamorgan~MGM|Powys~POW|South Glamorgan~SGM|West Glamorgan~WGM"],["United States","US","Alabama~AL|Alaska~AK|American Samoa~AS|Arizona~AZ|Arkansas~AR|California~CA|Colorado~CO|Connecticut~CT|Delaware~DE|District of Columbia~DC|Micronesia~FM|Florida~FL|Georgia~GA|Guam~GU|Hawaii~HI|Idaho~ID|Illinois~IL|Indiana~IN|Iowa~IA|Kansas~KS|Kentucky~KY|Louisiana~LA|Maine~ME|Marshall Islands~MH|Maryland~MD|Massachusetts~MA|Michigan~MI|Minnesota~MN|Mississippi~MS|Missouri~MO|Montana~MT|Nebraska~NE|Nevada~NV|New Hampshire~NH|New Jersey~NJ|New Mexico~NM|New York~NY|North Carolina~NC|North Dakota~ND|Northern Mariana Islands~MP|Ohio~OH|Oklahoma~OK|Oregon~OR|Palau~PW|Pennsylvania~PA|Puerto Rico~PR|Rhode Island~RI|South Carolina~SC|South Dakota~SD|Tennessee~TN|Texas~TX|Utah~UT|Vermont~VT|Virgin Islands~VI|Virginia~VA|Washington~WA|West Virginia~WV|Wisconsin~WI|Wyoming~WY|Armed Forces Americas~AA|Armed Forces Europe, Canada, Africa and Middle East~AE|Armed Forces Pacific~AP"],["United States Minor Outlying Islands","UM","Baker Island~81|Howland Island~84|Jarvis Island~86|Johnston Atoll~67|Kingman Reef~89|Midway Islands~71|Navassa Island~76|Palmyra Atoll~95|Wake Island~79|Bajo Nuevo Bank~BN|Serranilla Bank~SB"],["Uruguay","UY","Artigas~AR|Canelones~CA|Cerro Largo~CL|Colonia~CO|Durazno~DU|Flores~FS|Florida~FD|Lavalleja~LA|Maldonado~MA|Montevideo~MO|Paysand\xfa~PA|R\xedo Negro~RN|Rivera~RV|Rocha~RO|Salto~SA|San Jos\xe9~SJ|Soriano~SO|Tacuaremb\xf3~TA|Treinta y Tres~TT"],["Uzbekistan","UZ","Toshkent shahri~TK|Andijon~AN|Buxoro~BU|Farg\u2018ona~FA|Jizzax~JI|Namangan~NG|Navoiy~NW|Qashqadaryo (Qarshi)~QA|Samarqand~SA|Sirdaryo (Guliston)~SI|Surxondaryo (Termiz)~SU|Toshkent wiloyati~TO|Xorazm (Urganch)~XO|Qoraqalpog\u2018iston Respublikasi (Nukus)~QR"],["Vanuatu","VU","Malampa~MAP|P\xe9nama~PAM|Sanma~SAM|Sh\xe9fa~SEE|Taf\xe9a~TAE|Torba~TOB"],["Venezuela, Bolivarian Republic of","VE","Dependencias Federales~W|Distrito Federal~A|Amazonas~Z|Anzo\xe1tegui~B|Apure~C|Aragua~D|Barinas~E|Bol\xedvar~F|Carabobo~G|Cojedes~H|Delta Amacuro~Y|Falc\xf3n~I|Gu\xe1rico~J|Lara~K|M\xe9rida~L|Miranda~M|Monagas~N|Nueva Esparta~O|Portuguesa~P|Sucre~R|T\xe1chira~S|Trujillo~T|Vargas~X|Yaracuy~U|Zulia~V"],["Vietnam","VN","\u0110\u1ed3ng Nai~39|\u0110\u1ed3ng Th\xe1p~45|Gia Lai~30|H\xe0 Giang~03|H\xe0 Nam~63|H\xe0 T\xe2y~15|H\xe0 T\u0129nh~23|H\u1ea3i D\u01b0\u01a1ng~61|H\u1eadu Giang~73|H\xf2a B\xecnh~14|H\u01b0ng Y\xean~66|Kh\xe1nh H\xf2a~34|Ki\xean Giang~47|Kon Tum~28|Lai Ch\xe2u~01|L\xe2m \u0110\u1ed3ng~35|L\u1ea1ng S\u01a1n~09|L\xe0o Cai~02|Long An~41|Nam \u0110\u1ecbnh~67|Ngh\u1ec7 An~22|Ninh B\xecnh~18|Ninh Thu\u1eadn~36|Ph\xfa Th\u1ecd~68|Ph\xfa Y\xean~32|Qu\u1ea3ng B\xecnh~24|Qu\u1ea3ng Nam~27|Qu\u1ea3ng Ng\xe3i~29|Qu\u1ea3ng Ninh~13|Qu\u1ea3ng Tr\u1ecb~25|S\xf3c Tr\u0103ng~52|S\u01a1n La~05|T\xe2y Ninh~37|Th\xe1i B\xecnh~20|Th\xe1i Nguy\xean~69|Thanh H\xf3a~21|Th\u1eeba Thi\xean\u2013Hu\u1ebf~26|Ti\u1ec1n Giang~46|Tr\xe0 Vinh~51|Tuy\xean Quang~07|V\u0129nh Long~49|V\u0129nh Ph\xfac~70|Y\xean B\xe1i~06|C\u1ea7n Th\u01a1~CT|\u0110\xe0 N\u1eb5ng~DN|H\xe0 N\u1ed9i~HN|H\u1ea3i Ph\xf2ng~HP|H\u1ed3 Ch\xed Minh (S\xe0i G\xf2n)~SG"],["Virgin Islands, British","VG","Anegada~ANG|Jost Van Dyke~JVD|Tortola~TTA|Virgin Gorda~VGD"],["Virgin Islands, U.S.","VI","St. Thomas~STH|St. John~SJO|St. Croix~SCR"],["Wallis and Futuna","WF","Alo~ALO|Sigave~SIG|Wallis~WAL"],["Western Sahara","EH","Es Smara~ESM|Boujdour~BOD|La\xe2youne~LAA|Aousserd~AOU|Oued ed Dahab~OUD"],["Yemen","YE","Aby\u0101n~AB|'Adan~AD|A\u1e11 \u1e10\u0101li'~DA|Al Bay\u1e11\u0101'~BA|Al \u1e28udaydah~HU|Al Jawf~JA|Al Mahrah~MR|Al Ma\u1e29w\u012bt~MW|'Amr\u0101n~AM|Dham\u0101r~DH|\u1e28a\u1e11ramawt~HD|\u1e28ajjah~HJ|Ibb~IB|La\u1e29ij~LA|Ma'rib~MA|Raymah~RA|\u015e\u0101\u2018dah~SD|\u015ean\u2018\u0101'~SN|Shabwah~SH|T\u0101\u2018izz~TA"],["Zambia","ZM","Central~02|Copperbelt~08|Eastern~03|Luapula~04|Lusaka~09|Northern~05|North-Western~06|Southern~07|Western~01"],["Zimbabwe","ZW","Bulawayo~BU|Harare~HA|Manicaland~MA|Mashonaland Central~MC|Mashonaland East~ME|Mashonaland West~MW|Masvingo~MV|Matabeleland North~MN|Matabeleland South~MS|Midlands~MI"]],u="full",s="short",l="|",d="~",c=function(a,e){if(!(a instanceof e))throw new TypeError("Cannot call a class as a function")},h=function(){function a(a,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(a,r.key,r)}}return function(e,n,r){return n&&a(e.prototype,n),r&&a(e,r),e}}(),f=Object.assign||function(a){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(a[r]=n[r])}return a},p=function(a,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);a.prototype=Object.create(e&&e.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(a,e):a.__proto__=e)},g=function(a,e){var n={};for(var r in a)e.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(a,r)&&(n[r]=a[r]);return n},m=function(a,e){if(!a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!==typeof e&&"function"!==typeof e?a:e},S=function(a,e){if(Array.isArray(a))return a;if(Symbol.iterator in Object(a))return function(a,e){var n=[],r=!0,t=!1,i=void 0;try{for(var o,u=a[Symbol.iterator]();!(r=(o=u.next()).done)&&(n.push(o.value),!e||n.length!==e);r=!0);}catch(s){t=!0,i=s}finally{try{!r&&u.return&&u.return()}finally{if(t)throw i}}return n}(a,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")},b=function(a){if(Array.isArray(a)){for(var e=0,n=Array(a.length);e<a.length;e++)n[e]=a[e];return n}return Array.from(a)},A=function(a,e,n,r){var t=[],i=a;return n.length>0?i=a.filter((function(a){var e=S(a,2)[1];return n.indexOf(e)>-1})):r.length>0&&(i=a.filter((function(a){var e=S(a,2)[1];return-1===r.indexOf(e)}))),e.length>0&&(e.forEach((function(a){var e=i.find((function(e){return S(e,2)[1]===a}));e&&t.push(e)})),i=i.filter((function(a){var n=S(a,2)[1];return-1===e.indexOf(n)}))),t.length?[].concat(t,b(i)):i},y=function(a){function e(a){c(this,e);var n=m(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,a));return n.state={countries:A(o,a.priorityOptions,a.whitelist,a.blacklist)},n}return p(e,a),h(e,[{key:"getCountries",value:function(){var a=this.props,e=a.valueType,n=a.labelType;return this.state.countries.map((function(a){var t=S(a,2),i=t[0],o=t[1];return r.createElement("option",{value:e===s?o:i,key:o},n===s?o:i)}))}},{key:"getDefaultOption",value:function(){var a=this.props,e=a.showDefaultOption,n=a.defaultOptionLabel;return e?r.createElement("option",{value:"",key:"default"},n):null}},{key:"render",value:function(){var a=this.props,e=a.name,n=a.id,t=a.classes,i=a.value,o=a.onChange,u=a.onBlur,s=a.disabled,l=(a.showDefaultOption,a.defaultOptionLabel,a.labelType,a.valueType,a.whitelist,a.blacklist,a.customOptions,a.priorityOptions,g(a,["name","id","classes","value","onChange","onBlur","disabled","showDefaultOption","defaultOptionLabel","labelType","valueType","whitelist","blacklist","customOptions","priorityOptions"])),d=f({},l,{name:e,value:i,onChange:function(a){return o(a.target.value,a)},onBlur:function(a){return u(a)},disabled:s});return n&&(d.id=n),t&&(d.className=t),r.createElement("select",d,this.getDefaultOption(),this.getCountries())}}]),e}(r.Component);y.propTypes={value:i().oneOfType([i().string,i().number]),name:i().string,id:i().string,classes:i().string,showDefaultOption:i().bool,defaultOptionLabel:i().oneOfType([i().string,i().number]),priorityOptions:i().array,onChange:i().func,onBlur:i().func,labelType:i().oneOf([u,s]),valueType:i().oneOf([u,s]),whitelist:i().array,blacklist:i().array,disabled:i().bool},y.defaultProps={value:"",name:"rcrs-country",id:"",classes:"",showDefaultOption:!0,defaultOptionLabel:"Select Country",priorityOptions:[],onChange:function(){},onBlur:function(){},labelType:u,valueType:u,whitelist:[],blacklist:[],disabled:!1};var v=function(a){function e(a){c(this,e);var n=m(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,a));return n.state={regions:n.getRegions(a.country)},n.getRegions=n.getRegions.bind(n),n}return p(e,a),h(e,[{key:"componentDidUpdate",value:function(a){var e=this.props.country;if(e!==a.country){var n=this.getRegions(e);this.setState({regions:[].concat(b(n),b(this.getCustomOptions(n)))})}}},{key:"getCustomOptions",value:function(a){var e=this.props.customOptions,n=this.getDuplicates(a);return n.length?(console.error("Error: Duplicate regions present: "+n.toString()+".\nThe above item(s) is/are already getting added to the region dropdown by the library."),[]):e.map((function(a){if(a)return{regionName:a,regionShortCode:a}}))}},{key:"getDuplicates",value:function(a){var e=this.props,n=e.customOptions,r=e.valueType===u?"regionName":"regionShortCode";return a.filter((function(a){return-1!==n.indexOf(a[r])})).map((function(a){return a[r]}))}},{key:"getRegions",value:function(a){if(!a)return[];var e=this.props.countryValueType===u?0:1,n=[];return o.forEach((function(r){r[e]===a&&(n=r)})),n&&0!==n.length?n[2].split(l).map((function(a){var e=a.split(d),n=S(e,2),r=n[0],t=n[1];return{regionName:r,regionShortCode:void 0===t?null:t}})):(console.error("Error. Unknown country passed: "+a+'. If you\'re passing a country shortcode, be sure to include countryValueType="short" on the RegionDropdown'),[])}},{key:"getRegionList",value:function(){var a=this.props,e=a.labelType,n=a.valueType;return this.state.regions.map((function(a){var t=a.regionName,i=a.regionShortCode,o=e===u?t:i,s=n===u?t:i;return r.createElement("option",{value:s,key:t},o)}))}},{key:"getDefaultOption",value:function(){var a=this.props,e=a.blankOptionLabel,n=a.showDefaultOption,t=a.defaultOptionLabel;return a.country?n?r.createElement("option",{value:""},t):null:r.createElement("option",{value:""},e)}},{key:"render",value:function(){var a=this.props,e=a.value,n=a.country,t=a.onChange,i=a.onBlur,o=a.id,u=a.name,s=a.classes,l=a.disabled,d=(a.blankOptionLabel,a.showDefaultOption,a.defaultOptionLabel,a.labelType,a.valueType,a.countryValueType,a.disableWhenEmpty),c=(a.customOptions,g(a,["value","country","onChange","onBlur","id","name","classes","disabled","blankOptionLabel","showDefaultOption","defaultOptionLabel","labelType","valueType","countryValueType","disableWhenEmpty","customOptions"])),h=f({},c,{name:u,value:e,onChange:function(a){return t(a.target.value,a)},onBlur:function(a){return i(a)},disabled:l||d&&""===n});return o&&(h.id=o),s&&(h.className=s),r.createElement("select",h,this.getDefaultOption(),this.getRegionList())}}]),e}(r.PureComponent);v.propTypes={country:i().string,countryValueType:i().oneOf([u,s]),value:i().oneOfType([i().string,i().number]),name:i().string,id:i().string,classes:i().string,blankOptionLabel:i().string,showDefaultOption:i().bool,defaultOptionLabel:i().string,onChange:i().func,onBlur:i().func,labelType:i().string,valueType:i().string,disabled:i().bool,disableWhenEmpty:i().bool,customOptions:i().array},v.defaultProps={country:"",value:"",name:"rcrs-region",id:"",classes:"",blankOptionLabel:"-",showDefaultOption:!0,defaultOptionLabel:"Select Region",onChange:function(){},onBlur:function(){},countryValueType:u,labelType:u,valueType:u,disabled:!1,disableWhenEmpty:!1,customOptions:[]}},81882:function(a,e,n){"use strict";n.d(e,{AC:function(){return h},yX:function(){return c}});var r,t,i=n(85556),o=n(27378),u=n(83573);!function(a){a.formatDate="FormattedDate",a.formatTime="FormattedTime",a.formatNumber="FormattedNumber",a.formatList="FormattedList",a.formatDisplayName="FormattedDisplayName"}(r||(r={})),function(a){a.formatDate="FormattedDateParts",a.formatTime="FormattedTimeParts",a.formatNumber="FormattedNumberParts",a.formatList="FormattedListParts"}(t||(t={}));var s=function(a){var e=(0,u.Z)(),n=a.value,r=a.children,t=(0,i.__rest)(a,["value","children"]);return r(e.formatNumberToParts(n,t))};s.displayName="FormattedNumberParts";function l(a){var e=function(e){var n=(0,u.Z)(),r=e.value,t=e.children,o=(0,i.__rest)(e,["value","children"]),s="string"===typeof r?new Date(r||0):r;return t("formatDate"===a?n.formatDateToParts(s,o):n.formatTimeToParts(s,o))};return e.displayName=t[a],e}function d(a){var e=function(e){var n=(0,u.Z)(),r=e.value,t=e.children,s=(0,i.__rest)(e,["value","children"]),l=n[a](r,s);if("function"===typeof t)return t(l);var d=n.textComponent||o.Fragment;return o.createElement(d,null,l)};return e.displayName=r[a],e}s.displayName="FormattedNumberParts";d("formatDate"),d("formatTime"),d("formatNumber");var c=d("formatList"),h=(d("formatDisplayName"),l("formatDate"));l("formatTime")},78351:function(a,e,n){"use strict";var r=n(85556),t=n(27378),i=n(83573),o=n(89267);function u(a){var e=(0,i.Z)(),n=e.formatMessage,r=e.textComponent,o=void 0===r?t.Fragment:r,u=a.id,s=a.description,l=a.defaultMessage,d=a.values,c=a.children,h=a.tagName,f=void 0===h?o:h,p=n({id:u,description:s,defaultMessage:l},d,{ignoreTag:a.ignoreTag});return"function"===typeof c?c(Array.isArray(p)?p:[p]):f?t.createElement(f,null,t.Children.toArray(p)):t.createElement(t.Fragment,null,p)}u.displayName="FormattedMessage";var s=t.memo(u,(function(a,e){var n=a.values,t=(0,r.__rest)(a,["values"]),i=e.values,u=(0,r.__rest)(e,["values"]);return(0,o.wU)(i,n)&&(0,o.wU)(t,u)}));s.displayName="MemoizedFormattedMessage",e.Z=s},83573:function(a,e,n){"use strict";n.d(e,{Z:function(){return o}});var r=n(27378),t=n(36531),i=n(89267);function o(){var a=r.useContext(t._y);return(0,i.lq)(a),a}},89400:function(a){"use strict";a.exports=(a,e)=>{if("string"!==typeof a||"string"!==typeof e)throw new TypeError("Expected the arguments to be of type `string`");if(""===e)return[a];const n=a.indexOf(e);return-1===n?[a]:[a.slice(0,n),a.slice(n+e.length)]}},29742:function(a){"use strict";a.exports=a=>encodeURIComponent(a).replace(/[!'()*]/g,(a=>`%${a.charCodeAt(0).toString(16).toUpperCase()}`))},6637:function(a,e,n){"use strict";n.d(e,{$C:function(){return b},$_:function(){return O},$v:function(){return N},Fq:function(){return d},Jn:function(){return T},PY:function(){return P},RW:function(){return f},Rx:function(){return l},aQ:function(){return p},bA:function(){return c},m4:function(){return C},px:function(){return g},vh:function(){return m},vw:function(){return S}});var r=function(){return r=Object.assign||function(a){for(var e,n=1,r=arguments.length;n<r;n++)for(var t in e=arguments[n])Object.prototype.hasOwnProperty.call(e,t)&&(a[t]=e[t]);return a},r.apply(this,arguments)},t=function(a,e){return function(n){return Math.max(Math.min(n,e),a)}},i=function(a){return a%1?Number(a.toFixed(5)):a},o=/(-)?(\d[\d\.]*)/g,u=/(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d\.]+%?\))/gi,s=/^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d\.]+%?\))$/i,l={test:function(a){return"number"===typeof a},parse:parseFloat,transform:function(a){return a}},d=r(r({},l),{transform:t(0,1)}),c=r(r({},l),{default:1}),h=function(a){return{test:function(e){return"string"===typeof e&&e.endsWith(a)&&1===e.split(" ").length},parse:parseFloat,transform:function(e){return""+e+a}}},f=h("deg"),p=h("%"),g=h("px"),m=h("vh"),S=h("vw"),b=r(r({},p),{parse:function(a){return p.parse(a)/100},transform:function(a){return p.transform(100*a)}}),A=t(0,255),y=function(a){return void 0!==a.red},v=function(a){return void 0!==a.hue},k=function(a){return function(e){if("string"!==typeof e)return e;for(var n,r={},t=(n=e,n.substring(n.indexOf("(")+1,n.lastIndexOf(")"))).split(/,\s*/),i=0;i<4;i++)r[a[i]]=void 0!==t[i]?parseFloat(t[i]):1;return r}},M=r(r({},l),{transform:function(a){return Math.round(A(a))}});function B(a,e){return a.startsWith(e)&&s.test(a)}var C={test:function(a){return"string"===typeof a?B(a,"rgb"):y(a)},parse:k(["red","green","blue","alpha"]),transform:function(a){var e=a.red,n=a.green,r=a.blue,t=a.alpha,o=void 0===t?1:t;return function(a){var e=a.red,n=a.green,r=a.blue,t=a.alpha;return"rgba("+e+", "+n+", "+r+", "+(void 0===t?1:t)+")"}({red:M.transform(e),green:M.transform(n),blue:M.transform(r),alpha:i(d.transform(o))})}},T={test:function(a){return"string"===typeof a?B(a,"hsl"):v(a)},parse:k(["hue","saturation","lightness","alpha"]),transform:function(a){var e=a.hue,n=a.saturation,r=a.lightness,t=a.alpha,o=void 0===t?1:t;return function(a){var e=a.hue,n=a.saturation,r=a.lightness,t=a.alpha;return"hsla("+e+", "+n+", "+r+", "+(void 0===t?1:t)+")"}({hue:Math.round(e),saturation:p.transform(i(n)),lightness:p.transform(i(r)),alpha:i(d.transform(o))})}},N=r(r({},C),{test:function(a){return"string"===typeof a&&B(a,"#")},parse:function(a){var e="",n="",r="";return a.length>4?(e=a.substr(1,2),n=a.substr(3,2),r=a.substr(5,2)):(e=a.substr(1,1),n=a.substr(2,1),r=a.substr(3,1),e+=e,n+=n,r+=r),{red:parseInt(e,16),green:parseInt(n,16),blue:parseInt(r,16),alpha:1}}}),O={test:function(a){return"string"===typeof a&&s.test(a)||y(a)||v(a)},parse:function(a){return C.test(a)?C.parse(a):T.test(a)?T.parse(a):N.test(a)?N.parse(a):a},transform:function(a){return y(a)?C.transform(a):v(a)?T.transform(a):a}},R="${c}",L="${n}",K=function(a){return"number"===typeof a?0:a},P={test:function(a){if("string"!==typeof a||!isNaN(a))return!1;var e=0,n=a.match(o),r=a.match(u);return n&&(e+=n.length),r&&(e+=r.length),e>0},parse:function(a){var e=a,n=[],r=e.match(u);r&&(e=e.replace(u,R),n.push.apply(n,r.map(O.parse)));var t=e.match(o);return t&&n.push.apply(n,t.map(l.parse)),n},createTransformer:function(a){var e=a,n=0,r=a.match(u),t=r?r.length:0;if(r)for(var s=0;s<t;s++)e=e.replace(r[s],R),n++;var l=e.match(o),d=l?l.length:0;if(l)for(s=0;s<d;s++)e=e.replace(l[s],L),n++;return function(a){for(var r=e,o=0;o<n;o++)r=r.replace(o<t?R:L,o<t?O.transform(a[o]):i(a[o]));return r}},getAnimatableNone:function(a){var e=P.parse(a);return P.createTransformer(a)(e.map(K))}}},65783:function(a,e,n){"use strict";n.d(e,{Cg:function(){return A},tv:function(){return w},$_:function(){return s},qC:function(){return r.qC},GQ:function(){return f},bK:function(){return i},FK:function(){return C},AF:function(){return G},Dh:function(){return D},cp:function(){return c},bU:function(){return E}});var r=n(35186),t={width:{property:"width",scale:"sizes",transform:function(a,e){return(0,r.U2)(e,a,!function(a){return"number"===typeof a&&!isNaN(a)}(a)||a>1?a:100*a+"%")}},height:{property:"height",scale:"sizes"},minWidth:{property:"minWidth",scale:"sizes"},minHeight:{property:"minHeight",scale:"sizes"},maxWidth:{property:"maxWidth",scale:"sizes"},maxHeight:{property:"maxHeight",scale:"sizes"},size:{properties:["width","height"],scale:"sizes"},overflow:!0,overflowX:!0,overflowY:!0,display:!0,verticalAlign:!0},i=(0,r.By)(t),o=i,u={color:{property:"color",scale:"colors"},backgroundColor:{property:"backgroundColor",scale:"colors"},opacity:!0};u.bg=u.backgroundColor;var s=(0,r.By)(u),l=s,d={fontFamily:{property:"fontFamily",scale:"fonts"},fontSize:{property:"fontSize",scale:"fontSizes",defaultScale:[12,14,16,20,24,32,48,64,72]},fontWeight:{property:"fontWeight",scale:"fontWeights"},lineHeight:{property:"lineHeight",scale:"lineHeights"},letterSpacing:{property:"letterSpacing",scale:"letterSpacings"},textAlign:!0,fontStyle:!0},c=(0,r.By)(d),h=c,f=(0,r.By)({alignItems:!0,alignContent:!0,justifyItems:!0,justifyContent:!0,flexWrap:!0,flexDirection:!0,flex:!0,flexGrow:!0,flexShrink:!0,flexBasis:!0,justifySelf:!0,alignSelf:!0,order:!0}),p=f,g={space:[0,4,8,16,32,64,128,256,512]},m={gridGap:{property:"gridGap",scale:"space",defaultScale:g.space},gridColumnGap:{property:"gridColumnGap",scale:"space",defaultScale:g.space},gridRowGap:{property:"gridRowGap",scale:"space",defaultScale:g.space},gridColumn:!0,gridRow:!0,gridAutoFlow:!0,gridAutoColumns:!0,gridAutoRows:!0,gridTemplateColumns:!0,gridTemplateRows:!0,gridTemplateAreas:!0,gridArea:!0},S=(0,r.By)(m),b={border:{property:"border",scale:"borders"},borderWidth:{property:"borderWidth",scale:"borderWidths"},borderStyle:{property:"borderStyle",scale:"borderStyles"},borderColor:{property:"borderColor",scale:"colors"},borderRadius:{property:"borderRadius",scale:"radii"},borderTop:{property:"borderTop",scale:"borders"},borderTopLeftRadius:{property:"borderTopLeftRadius",scale:"radii"},borderTopRightRadius:{property:"borderTopRightRadius",scale:"radii"},borderRight:{property:"borderRight",scale:"borders"},borderBottom:{property:"borderBottom",scale:"borders"},borderBottomLeftRadius:{property:"borderBottomLeftRadius",scale:"radii"},borderBottomRightRadius:{property:"borderBottomRightRadius",scale:"radii"},borderLeft:{property:"borderLeft",scale:"borders"},borderX:{properties:["borderLeft","borderRight"],scale:"borders"},borderY:{properties:["borderTop","borderBottom"],scale:"borders"},borderTopWidth:{property:"borderTopWidth",scale:"borderWidths"},borderTopColor:{property:"borderTopColor",scale:"colors"},borderTopStyle:{property:"borderTopStyle",scale:"borderStyles"}};b.borderTopLeftRadius={property:"borderTopLeftRadius",scale:"radii"},b.borderTopRightRadius={property:"borderTopRightRadius",scale:"radii"},b.borderBottomWidth={property:"borderBottomWidth",scale:"borderWidths"},b.borderBottomColor={property:"borderBottomColor",scale:"colors"},b.borderBottomStyle={property:"borderBottomStyle",scale:"borderStyles"},b.borderBottomLeftRadius={property:"borderBottomLeftRadius",scale:"radii"},b.borderBottomRightRadius={property:"borderBottomRightRadius",scale:"radii"},b.borderLeftWidth={property:"borderLeftWidth",scale:"borderWidths"},b.borderLeftColor={property:"borderLeftColor",scale:"colors"},b.borderLeftStyle={property:"borderLeftStyle",scale:"borderStyles"},b.borderRightWidth={property:"borderRightWidth",scale:"borderWidths"},b.borderRightColor={property:"borderRightColor",scale:"colors"},b.borderRightStyle={property:"borderRightStyle",scale:"borderStyles"};var A=(0,r.By)(b),y=A,v={background:!0,backgroundImage:!0,backgroundSize:!0,backgroundPosition:!0,backgroundRepeat:!0};v.bgImage=v.backgroundImage,v.bgSize=v.backgroundSize,v.bgPosition=v.backgroundPosition,v.bgRepeat=v.backgroundRepeat;var k=(0,r.By)(v),M={space:[0,4,8,16,32,64,128,256,512]},B={position:!0,zIndex:{property:"zIndex",scale:"zIndices"},top:{property:"top",scale:"space",defaultScale:M.space},right:{property:"right",scale:"space",defaultScale:M.space},bottom:{property:"bottom",scale:"space",defaultScale:M.space},left:{property:"left",scale:"space",defaultScale:M.space}},C=(0,r.By)(B),T=C,N={space:[0,4,8,16,32,64,128,256,512]},O=function(a){return"number"===typeof a&&!isNaN(a)},R=function(a,e){if(!O(a))return(0,r.U2)(e,a,a);var n=a<0,t=Math.abs(a),i=(0,r.U2)(e,t,t);return O(i)?i*(n?-1:1):n?"-"+i:i},L={};L.margin={margin:{property:"margin",scale:"space",transform:R,defaultScale:N.space},marginTop:{property:"marginTop",scale:"space",transform:R,defaultScale:N.space},marginRight:{property:"marginRight",scale:"space",transform:R,defaultScale:N.space},marginBottom:{property:"marginBottom",scale:"space",transform:R,defaultScale:N.space},marginLeft:{property:"marginLeft",scale:"space",transform:R,defaultScale:N.space},marginX:{properties:["marginLeft","marginRight"],scale:"space",transform:R,defaultScale:N.space},marginY:{properties:["marginTop","marginBottom"],scale:"space",transform:R,defaultScale:N.space}},L.margin.m=L.margin.margin,L.margin.mt=L.margin.marginTop,L.margin.mr=L.margin.marginRight,L.margin.mb=L.margin.marginBottom,L.margin.ml=L.margin.marginLeft,L.margin.mx=L.margin.marginX,L.margin.my=L.margin.marginY,L.padding={padding:{property:"padding",scale:"space",defaultScale:N.space},paddingTop:{property:"paddingTop",scale:"space",defaultScale:N.space},paddingRight:{property:"paddingRight",scale:"space",defaultScale:N.space},paddingBottom:{property:"paddingBottom",scale:"space",defaultScale:N.space},paddingLeft:{property:"paddingLeft",scale:"space",defaultScale:N.space},paddingX:{properties:["paddingLeft","paddingRight"],scale:"space",defaultScale:N.space},paddingY:{properties:["paddingTop","paddingBottom"],scale:"space",defaultScale:N.space}},L.padding.p=L.padding.padding,L.padding.pt=L.padding.paddingTop,L.padding.pr=L.padding.paddingRight,L.padding.pb=L.padding.paddingBottom,L.padding.pl=L.padding.paddingLeft,L.padding.px=L.padding.paddingX,L.padding.py=L.padding.paddingY;var K=(0,r.By)(L.margin),P=(0,r.By)(L.padding),D=(0,r.qC)(K,P),G=(0,r.By)({boxShadow:{property:"boxShadow",scale:"shadows"},textShadow:{property:"textShadow",scale:"shadows"}}),I=n(13298),E=function(a){var e,n,t=a.scale,i=a.prop,o=void 0===i?"variant":i,u=a.variants,s=void 0===u?{}:u,l=a.key;n=Object.keys(s).length?function(a,e,n){return(0,I.ZP)((0,r.U2)(e,a,null))(n.theme)}:function(a,e){return(0,r.U2)(e,a,null)},n.scale=t||l,n.defaults=s;var d=((e={})[o]=n,e);return(0,r.jo)(d)},w=(E({key:"buttons"}),E({key:"textStyles",prop:"textStyle"}),E({key:"colorStyles",prop:"colors"}),o.width,o.height,o.minWidth,o.minHeight,o.maxWidth,o.maxHeight,o.size,o.verticalAlign,o.display,o.overflow,o.overflowX,o.overflowY,l.opacity,h.fontSize,h.fontFamily,h.fontWeight,h.lineHeight,h.textAlign,h.fontStyle,h.letterSpacing,p.alignItems,p.alignContent,p.justifyItems,p.justifyContent,p.flexWrap,p.flexDirection,p.flex,p.flexGrow,p.flexShrink,p.flexBasis,p.justifySelf,p.alignSelf,p.order,S.gridGap,S.gridColumnGap,S.gridRowGap,S.gridColumn,S.gridRow,S.gridAutoFlow,S.gridAutoColumns,S.gridAutoRows,S.gridTemplateColumns,S.gridTemplateRows,S.gridTemplateAreas,S.gridArea,y.borderWidth,y.borderStyle,y.borderColor);y.borderTop,y.borderRight,y.borderBottom,y.borderLeft,y.borderRadius,k.backgroundImage,k.backgroundSize,k.backgroundPosition,k.backgroundRepeat,T.zIndex,T.top,T.right,T.bottom,T.left},94708:function(a,e,n){"use strict";n.d(e,{ig:function(){return V},H$:function(){return E},LA:function(){return l},ZP:function(){return q},_c:function(){return k},Gl:function(){return y}});var r=function(){return r=Object.assign||function(a){for(var e,n=1,r=arguments.length;n<r;n++)for(var t in e=arguments[n])Object.prototype.hasOwnProperty.call(e,t)&&(a[t]=e[t]);return a},r.apply(this,arguments)};function t(a,e){var n={};for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&e.indexOf(r)<0&&(n[r]=a[r]);if(null!=a&&"function"===typeof Object.getOwnPropertySymbols){var t=0;for(r=Object.getOwnPropertySymbols(a);t<r.length;t++)e.indexOf(r[t])<0&&Object.prototype.propertyIsEnumerable.call(a,r[t])&&(n[r[t]]=a[r[t]])}return n}var i,o=n(90218),u=n(6637),s=n(76065),l=function(a){var e=a.onRead,n=a.onRender,r=a.uncachedValues,i=void 0===r?new Set:r,u=a.useCache,s=void 0===u||u;return function(a){void 0===a&&(a={});var r=t(a,[]),u={},l=[],d=!1;function c(a,e){a.startsWith("--")&&(r.hasCSSVariable=!0);var n=u[a];u[a]=e,u[a]!==n&&(-1===l.indexOf(a)&&l.push(a),d||(d=!0,o.ZP.render(h.render)))}var h={get:function(a,n){return void 0===n&&(n=!1),!n&&s&&!i.has(a)&&void 0!==u[a]?u[a]:e(a,r)},set:function(a,e){if("string"===typeof a)c(a,e);else for(var n in a)c(n,a[n]);return this},render:function(a){return void 0===a&&(a=!1),(d||!0===a)&&(n(u,r,l),d=!1,l.length=0),this}};return h}},d=/([a-z])([A-Z])/g,c=function(a){return a.replace(d,"$1-$2").toLowerCase()},h=new Map,f=new Map,p=["Webkit","Moz","O","ms",""],g=p.length,m="undefined"!==typeof document,S=function(a,e){return f.set(a,c(e))},b=function(a,e){void 0===e&&(e=!1);var n=e?f:h;return n.has(a)||(m?function(a){i=i||document.createElement("div");for(var e=0;e<g;e++){var n=p[e],r=""===n,t=r?a:n+a.charAt(0).toUpperCase()+a.slice(1);if(t in i.style||r){if(r&&"clipPath"===a&&f.has(a))return;h.set(a,t),S(a,(r?"":"-")+c(t))}}}(a):function(a){S(a,a)}(a)),n.get(a)||a},A=["","X","Y","Z"],y=["translate","scale","rotate","skew","transformPerspective"].reduce((function(a,e){return A.reduce((function(a,n){return a.push(e+n),a}),a)}),["x","y","z"]),v=y.reduce((function(a,e){return a[e]=!0,a}),{});function k(a){return!0===v[a]}function M(a,e){return y.indexOf(a)-y.indexOf(e)}var B=new Set(["originX","originY","originZ"]);function C(a){return B.has(a)}var T=r(r({},u.Rx),{transform:Math.round}),N={color:u.$_,backgroundColor:u.$_,outlineColor:u.$_,fill:u.$_,stroke:u.$_,borderColor:u.$_,borderTopColor:u.$_,borderRightColor:u.$_,borderBottomColor:u.$_,borderLeftColor:u.$_,borderWidth:u.px,borderTopWidth:u.px,borderRightWidth:u.px,borderBottomWidth:u.px,borderLeftWidth:u.px,borderRadius:u.px,radius:u.px,borderTopLeftRadius:u.px,borderTopRightRadius:u.px,borderBottomRightRadius:u.px,borderBottomLeftRadius:u.px,width:u.px,maxWidth:u.px,height:u.px,maxHeight:u.px,size:u.px,top:u.px,right:u.px,bottom:u.px,left:u.px,padding:u.px,paddingTop:u.px,paddingRight:u.px,paddingBottom:u.px,paddingLeft:u.px,margin:u.px,marginTop:u.px,marginRight:u.px,marginBottom:u.px,marginLeft:u.px,rotate:u.RW,rotateX:u.RW,rotateY:u.RW,rotateZ:u.RW,scale:u.bA,scaleX:u.bA,scaleY:u.bA,scaleZ:u.bA,skew:u.RW,skewX:u.RW,skewY:u.RW,distance:u.px,translateX:u.px,translateY:u.px,translateZ:u.px,x:u.px,y:u.px,z:u.px,perspective:u.px,opacity:u.Fq,originX:u.$C,originY:u.$C,originZ:u.px,zIndex:T,fillOpacity:u.Fq,strokeOpacity:u.Fq,numOctaves:T},O=function(a){return N[a]},R=function(a,e){return e&&"number"===typeof a?e.transform(a):a},L="scrollLeft",K="scrollTop",P=new Set([L,K]),D=new Set([L,K,"transform"]),G={x:"translateX",y:"translateY",z:"translateZ"};function I(a){return"function"===typeof a}function E(a,e,n,r,t,i,o,u){void 0===e&&(e=!0),void 0===n&&(n={}),void 0===r&&(r={}),void 0===t&&(t={}),void 0===i&&(i=[]),void 0===o&&(o=!1),void 0===u&&(u=!0);var s=!0,l=!1,d=!1;for(var c in a){var h=a[c],f=O(c),p=R(h,f);k(c)?(l=!0,r[c]=p,i.push(c),s&&(f.default&&h!==f.default||!f.default&&0!==h)&&(s=!1)):C(c)?(t[c]=p,d=!0):D.has(c)&&I(p)||(n[b(c,o)]=p)}return(l||"function"===typeof a.transform)&&(n.transform=function(a,e,n,r,t,i){void 0===i&&(i=!0);var o="",u=!1;n.sort(M);for(var s=n.length,l=0;l<s;l++){var d=n[l];o+=(G[d]||d)+"("+e[d]+") ",u="z"===d||u}return!u&&t?o+="translateZ(0)":o=o.trim(),I(a.transform)?o=a.transform(e,r?"":o):i&&r&&(o="none"),o}(a,r,i,s,e,u)),d&&(n.transformOrigin=(t.originX||"50%")+" "+(t.originY||"50%")+" "+(t.originZ||0)),n}function w(a){var e=void 0===a?{}:a,n=e.enableHardwareAcceleration,r=void 0===n||n,t=e.isDashCase,i=void 0===t||t,o=e.allowTransformNone,u=void 0===o||o,s={},l={},d={},c=[];return function(a){return c.length=0,E(a,r,s,l,d,c,i,u),s}}var H=l({onRead:function(a,e){var n=e.element,r=e.preparseOutput,t=O(a);if(k(a))return t&&t.default||0;if(P.has(a))return n[a];var i=window.getComputedStyle(n,null).getPropertyValue(b(a,!0))||0;return r&&t&&t.test(i)&&t.parse?t.parse(i):i},onRender:function(a,e,n){var r=e.element,t=e.buildStyles,i=e.hasCSSVariable;if(Object.assign(r.style,t(a)),i)for(var o=n.length,u=0;u<o;u++){var s=n[u];s.startsWith("--")&&r.style.setProperty(s,a[s])}-1!==n.indexOf(L)&&(r.scrollLeft=a.scrollLeft),-1!==n.indexOf(K)&&(r.scrollTop=a.scrollTop)},uncachedValues:P});var j=new Set(["baseFrequency","diffuseConstant","kernelMatrix","kernelUnitLength","keySplines","keyTimes","limitingConeAngle","markerHeight","markerWidth","numOctaves","targetX","targetY","surfaceScale","specularConstant","specularExponent","stdDeviation","tableValues"]),z=function(a,e){return u.px.transform(a*e)},U={x:0,y:0,width:0,height:0};function W(a,e,n){return"string"===typeof a?a:u.px.transform(e+n*a)}var x={enableHardwareAcceleration:!1,isDashCase:!1};function V(a,e,n,r,i,o){void 0===e&&(e=U),void 0===r&&(r=w(x)),void 0===i&&(i={style:{}}),void 0===o&&(o=!0);var u=a.attrX,s=a.attrY,l=a.originX,d=a.originY,h=a.pathLength,f=a.pathSpacing,p=void 0===f?1:f,g=a.pathOffset,m=void 0===g?0:g,S=r(t(a,["attrX","attrY","originX","originY","pathLength","pathSpacing","pathOffset"]));for(var b in S){if("transform"===b)i.style.transform=S[b];else i[o&&!j.has(b)?c(b):b]=S[b]}return(void 0!==l||void 0!==d||S.transform)&&(i.style.transformOrigin=function(a,e,n){return W(e,a.x,a.width)+" "+W(n,a.y,a.height)}(e,void 0!==l?l:.5,void 0!==d?d:.5)),void 0!==u&&(i.x=u),void 0!==s&&(i.y=s),void 0!==n&&void 0!==h&&(i[o?"stroke-dashoffset":"strokeDashoffset"]=z(-m,n),i[o?"stroke-dasharray":"strokeDasharray"]=z(h,n)+" "+z(p,n)),i}function F(a,e,n){void 0===n&&(n=!0);var r={style:{}},t=w(x);return function(i){return V(i,a,e,t,r,n)}}var Y=l({onRead:function(a,e){var n=e.element;if(k(a=j.has(a)?a:c(a))){var r=O(a);return r&&r.default||0}return n.getAttribute(a)},onRender:function(a,e){var n=e.element,r=(0,e.buildAttrs)(a);for(var t in r)"style"===t?Object.assign(n.style,r.style):n.setAttribute(t,r[t])}}),Z=l({useCache:!1,onRead:function(a){return"scrollTop"===a?window.pageYOffset:window.pageXOffset},onRender:function(a){var e=a.scrollTop,n=void 0===e?0:e,r=a.scrollLeft,t=void 0===r?0:r;return window.scrollTo(t,n)}}),J=new WeakMap,$=function(a,e){var n;return a===window?n=Z(a):!function(a){return a instanceof HTMLElement||"function"===typeof a.click}(a)?function(a){return a instanceof SVGElement||"ownerSVGElement"in a}(a)&&(n=function(a){var e=function(a){try{return function(a){return"function"===typeof a.getBBox?a.getBBox():a.getBoundingClientRect()}(a)}catch(e){return{x:0,y:0,width:0,height:0}}}(a),n=function(a){return"path"===a.tagName}(a)&&a.getTotalLength?a.getTotalLength():void 0;return Y({element:a,buildAttrs:F(e,n)})}(a)):n=function(a,e){void 0===e&&(e={});var n=e.enableHardwareAcceleration,i=e.allowTransformNone,o=t(e,["enableHardwareAcceleration","allowTransformNone"]);return H(r({element:a,buildStyles:w({enableHardwareAcceleration:n,allowTransformNone:i}),preparseOutput:!0},o))}(a,e),(0,s.k)(void 0!==n,"No valid node provided. Node must be HTMLElement, SVGElement or window."),J.set(a,n),n};var q=function(a,e){return function(a,e){return J.has(a)?J.get(a):$(a,e)}("string"===typeof a?document.querySelector(a):a,e)}},31099:function(a,e,n){"use strict";function r(){return r=Object.assign||function(a){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(a[r]=n[r])}return a},r.apply(this,arguments)}n.d(e,{Z:function(){return r}})}}]);